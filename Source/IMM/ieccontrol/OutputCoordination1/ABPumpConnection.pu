(*
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".
*)

IMPORT_OVER_LISTFILE
 CHECK_REF
, tyMovementRegisterList
, tsPumpConnectionList
, tyPumpConnectionList
, tsPumpConnectionElement

END_IMPORT

ALGORITHM_BLOCK ABPumpConnection #DUMMY_EDIT_BLOCK

SYSTEM_VAR
 sv_bInitDone : BOOL;
 sv_MovementsAvailable : tyMovementRegisterList;
 sv_iMovementsAvailable : DINT;
 sv_PumpConnectionList : tsPumpConnectionList;
END_VAR

SYSTEM_OBJECT
 TaskVis : TASK;
 PU_Task_7 : TASK;
END_OBJECT

POSTUPDATE_ALGORITHM pInitDone ON PU_Task_7 WITH sv_bInitDone

#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

START_PROCESS_ALGORITHM(paGetPumpConnectionVars);


;#END_EDIT_BLOCK END_ALGORITHM

PROCESS_ALGORITHM paGetPumpConnectionVars ON TaskVis


VAR_TEMP
 i : DINT;
 k : DINT;
END_VAR

VAR
 bFound : BOOL;
 tmpList : tyPumpConnectionList;
 tmpPumpConnection : tsPumpConnectionElement;
 bChanged : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

//get references to "required pumps" variables and store them
//in a sv_PumpConnectionList
FOR i := 1 TO sv_iMovementsAvailable DO 
   IF CHECK_REF(sv_MovementsAvailable[i].pMovementData^.AnaOutData.pRequiredPumps^) THEN
      //only add reference if it is not already in the list
      bFound := FALSE;
      FOR k := 1 TO sv_PumpConnectionList.iCount DO
         IF (sv_PumpConnectionList.Movements[k] = sv_MovementsAvailable[i].pMovementData^.AnaOutData.pRequiredPumps) THEN
            bFound := TRUE;
            EXIT;
         END_IF;   
      END_FOR;
      
      IF NOT bFound THEN
         sv_PumpConnectionList.iCount := sv_PumpConnectionList.iCount + 1;
         sv_PumpConnectionList.Movements[sv_PumpConnectionList.iCount] := sv_MovementsAvailable[i].pMovementData^.AnaOutData.pRequiredPumps;
      END_IF;     
   END_IF;      
END_FOR;

//sort list depending on iOrder
//lowest number will be at the beginning of the list
tmpList := sv_PumpConnectionList.Movements;
bChanged := TRUE;
WHILE bChanged DO
   bChanged := FALSE;
   FOR i := 1 TO (sv_PumpConnectionList.iCount - 1) DO
      IF tmpList[(i+1)]^.iOrder < tmpList[i]^.iOrder THEN
         //change necessary                                  
         tmpPumpConnection := tmpList[i];
         tmpList[i] := tmpList[i+1];
         tmpList[i+1] := tmpPumpConnection;
         bChanged := TRUE;         
      END_IF;
   END_FOR;
END_WHILE;

//copy tmp list to SV
sv_PumpConnectionList.Movements := tmpList;

STOP_PROCESS_ALGORITHM();


;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 148 @Pou 25 
@@@BEG_Comment@@@
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".
@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
1 
@Var @RT(9)CHECK_REF @RT(0) @T @T @DERIVED 0 @F @RT(23)KEBA_STANDARD_PROCEDURE @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(16)ABPumpConnection @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
6 
@Var @RT(12)sv_bInitDone @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(21)sv_MovementsAvailable @RT(0) @T @T @DERIVED 0 @F @RT(22)tyMovementRegisterList @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(22)sv_iMovementsAvailable @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(21)sv_PumpConnectionList @RT(0) @T @T @DERIVED 0 @F @RT(20)tsPumpConnectionList @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(7)TaskVis @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(9)PU_Task_7 @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

2 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(9)pInitDone @STRUCTURED_TEXT 
@RT(0) @RT(12)sv_bInitDone @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@PROCESS_ALGORITHM @RT(23)paGetPumpConnectionVars @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(7)TaskVis @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
6 
@Var @RT(1)i @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 4 @F @F @F @F 

@Var @RT(1)k @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 4 @F @F @F @F 

@Var @RT(6)bFound @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(7)tmpList @RT(0) @T @T @DERIVED 0 @F @RT(20)tyPumpConnectionList @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(17)tmpPumpConnection @RT(0) @T @T @DERIVED 0 @F @RT(23)tsPumpConnectionElement @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(8)bChanged @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(7)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

START_PROCESS_ALGORITHM(paGetPumpConnectionVars);

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(47)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

//get references to "required pumps" variables and store them
//in a sv_PumpConnectionList
FOR i := 1 TO sv_iMovementsAvailable DO 
   IF CHECK_REF(sv_MovementsAvailable[i].pMovementData^.AnaOutData.pRequiredPumps^) THEN
      //only add reference if it is not already in the list
      bFound := FALSE;
      FOR k := 1 TO sv_PumpConnectionList.iCount DO
         IF (sv_PumpConnectionList.Movements[k] = sv_MovementsAvailable[i].pMovementData^.AnaOutData.pRequiredPumps) THEN
            bFound := TRUE;
            EXIT;
         END_IF;   
      END_FOR;
      
      IF NOT bFound THEN
         sv_PumpConnectionList.iCount := sv_PumpConnectionList.iCount + 1;
         sv_PumpConnectionList.Movements[sv_PumpConnectionList.iCount] := sv_MovementsAvailable[i].pMovementData^.AnaOutData.pRequiredPumps;
      END_IF;     
   END_IF;      
END_FOR;

//sort list depending on iOrder
//lowest number will be at the beginning of the list
tmpList := sv_PumpConnectionList.Movements;
bChanged := TRUE;
WHILE bChanged DO
   bChanged := FALSE;
   FOR i := 1 TO (sv_PumpConnectionList.iCount - 1) DO
      IF tmpList[(i+1)]^.iOrder < tmpList[i]^.iOrder THEN
         //change necessary                                  
         tmpPumpConnection := tmpList[i];
         tmpList[i] := tmpList[i+1];
         tmpList[i+1] := tmpPumpConnection;
         bChanged := TRUE;         
      END_IF;
   END_FOR;
END_WHILE;

//copy tmp list to SV
sv_PumpConnectionList.Movements := tmpList;

STOP_PROCESS_ALGORITHM();

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 
@END_Body 

@END_Contents 
