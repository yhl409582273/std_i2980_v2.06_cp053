(*
This algo block starts movements by calling the system.FBManualButton
with the correct parameters corresponding to a pressed Panel Button.
*)

IMPORT_OVER_LISTFILE
 SET_ALARM
, RESET_ALARM
, cCompMoldHeightAuto
, tnOperationMode
, FBManualButton
, tsMoveData
, tsDeviceId
, FBCheckReady

END_IMPORT

ALGORITHM_BLOCK ABManualButton #DUMMY_EDIT_BLOCK

SYSTEM_VAR
 sv_OperationMode : tnOperationMode;
 sv_MoveForward : tsMoveData (* movement data containing admistrativ parameters *);
 sv_MoveBackward : tsMoveData (* movement data containing admistrativ parameters *);
 sv_bInitDone : BOOL;
 sv_DeviceId : tsDeviceId;
END_VAR

SYSTEM_OBJECT
 PU_Task_7 : TASK;
 erSetupModeRequiredForAdjust : ALARM;
END_OBJECT

VAR
 fbManualButton : FBManualButton (* handling the buttons and setting the corresponding start events *);
 mpbAutoAdjustReady : REFTO BOOL;
END_VAR

(*
This algo starts the mold height forward movement by calling the system.FBManualButton
with the correct parameters when the di_ButtonIn is pressed. (post update).
*)

ALGORITHM aButtonFwd


VAR_INPUT
 bButtonFwd : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

//check operation mode
IF bButtonFwd AND sv_OperationMode <> nSetup THEN
    SET_ALARM(Name := erSetupModeRequiredForAdjust,
              SubID1 := sv_DeviceId.CompId);
    RETURN;
END_IF;

IF mpbAutoAdjustReady <> EMPTY AND NOT mpbAutoAdjustReady^ THEN
    // auto mold adjust available and active -> ignore manual button
    RETURN;
END_IF;

fbManualButton(bButton := bButtonFwd, MoveId := sv_MoveForward.MoveId, MoveDir := sv_MoveForward.MoveDir);










;#END_EDIT_BLOCK END_ALGORITHM

(*
This algo starts the mold height backward movement by calling the system.FBManualButton
with the correct parameters when the di_ButtonIn is pressed. (post update).
*)

ALGORITHM aButtonBwd


VAR_INPUT
 bButtonBwd : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

//check operation mode
IF bButtonBwd AND sv_OperationMode <> nSetup THEN
    SET_ALARM(Name := erSetupModeRequiredForAdjust,
              SubID1 := sv_DeviceId.CompId);
    RETURN;
END_IF;

IF mpbAutoAdjustReady <> EMPTY AND NOT mpbAutoAdjustReady^ THEN
    // auto mold adjust available and active -> ignore manual button
    RETURN;
END_IF;

fbManualButton(bButton := bButtonBwd, MoveId := sv_MoveBackward.MoveId, MoveDir := sv_MoveBackward.MoveDir);





;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pInitDone ON PU_Task_7(10) WITH sv_bInitDone


VAR
 fbCheckAutoAdjustReady : FBCheckReady;
 DeviceIdAutoAdjust : tsDeviceId;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)


//get reference to ready flag of auto mold adjust function unit
DeviceIdAutoAdjust.CompId := cCompMoldHeightAuto;
DeviceIdAutoAdjust.IndexId := sv_DeviceId.IndexId;

fbCheckAutoAdjustReady(DeviceId := DeviceIdAutoAdjust);
mpbAutoAdjustReady := fbCheckAutoAdjustReady.pbReady;



;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 52 @Pou 25 
@@@BEG_Comment@@@
This algo block starts movements by calling the system.FBManualButton
with the correct parameters corresponding to a pressed Panel Button.
@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
2 
@Var @RT(9)SET_ALARM @RT(0) @T @T @DERIVED 0 @F @RT(23)KEBA_STANDARD_PROCEDURE @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(11)RESET_ALARM @RT(0) @T @T @DERIVED 0 @F @RT(23)KEBA_STANDARD_PROCEDURE @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
1 
@Var @RT(19)cCompMoldHeightAuto @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
0 @RT(3)125 @RT(26)Component Auto Mold Height 
@END_Attrib 
1 1 @F @F @F @F 

@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(14)ABManualButton @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
9 
@Var @RT(9)PU_Task_7 @RT(0) @T @F @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(16)sv_OperationMode @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(15)tnOperationMode @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(14)fbManualButton @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(14)FBManualButton @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(63)handling the buttons and setting the corresponding start events @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(14)sv_MoveForward @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tsMoveData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(47)movement data containing admistrativ parameters @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(15)sv_MoveBackward @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tsMoveData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(47)movement data containing admistrativ parameters @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(28)erSetupModeRequiredForAdjust @RT(0) @T @F @DT @RT(5)ALARM @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(18)mpbAutoAdjustReady @RT(0) @T @T @REFTO 0 @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(12)sv_bInitDone @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(11)sv_DeviceId @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tsDeviceId @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

3 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(10)aButtonFwd @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(10)bButtonFwd @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(10)aButtonBwd @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(10)bButtonBwd @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(9)pInitDone @STRUCTURED_TEXT 
@RT(0) @RT(12)sv_bInitDone @RT(13)PU_Task_7(10) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
2 
@Var @RT(22)fbCheckAutoAdjustReady @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(12)FBCheckReady @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(18)DeviceIdAutoAdjust @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tsDeviceId @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(27)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

//check operation mode
IF bButtonFwd AND sv_OperationMode <> nSetup THEN
    SET_ALARM(Name := erSetupModeRequiredForAdjust,
              SubID1 := sv_DeviceId.CompId);
    RETURN;
END_IF;

IF mpbAutoAdjustReady <> EMPTY AND NOT mpbAutoAdjustReady^ THEN
    // auto mold adjust available and active -> ignore manual button
    RETURN;
END_IF;

fbManualButton(bButton := bButtonFwd, MoveId := sv_MoveForward.MoveId, MoveDir := sv_MoveForward.MoveDir);









@END_Body 

@@@BEG_Comment@@@ 
@TL(2)
This algo starts the mold height forward movement by calling the system.FBManualButton
with the correct parameters when the di_ButtonIn is pressed. (post update).
@@@END_Comment@@@ 

@BEG_Body 
@TL(22)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

//check operation mode
IF bButtonBwd AND sv_OperationMode <> nSetup THEN
    SET_ALARM(Name := erSetupModeRequiredForAdjust,
              SubID1 := sv_DeviceId.CompId);
    RETURN;
END_IF;

IF mpbAutoAdjustReady <> EMPTY AND NOT mpbAutoAdjustReady^ THEN
    // auto mold adjust available and active -> ignore manual button
    RETURN;
END_IF;

fbManualButton(bButton := bButtonBwd, MoveId := sv_MoveBackward.MoveId, MoveDir := sv_MoveBackward.MoveDir);




@END_Body 

@@@BEG_Comment@@@ 
@TL(2)
This algo starts the mold height backward movement by calling the system.FBManualButton
with the correct parameters when the di_ButtonIn is pressed. (post update).
@@@END_Comment@@@ 

@BEG_Body 
@TL(14)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)


//get reference to ready flag of auto mold adjust function unit
DeviceIdAutoAdjust.CompId := cCompMoldHeightAuto;
DeviceIdAutoAdjust.IndexId := sv_DeviceId.IndexId;

fbCheckAutoAdjustReady(DeviceId := DeviceIdAutoAdjust);
mpbAutoAdjustReady := fbCheckAutoAdjustReady.pbReady;


@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 
@END_Body 

@END_Contents 
