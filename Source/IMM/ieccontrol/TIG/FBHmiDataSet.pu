(*
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

command to HMI: load or save dataset

@FunctionID: A-VAR-16.5
TIG 3.11.6
*)

IMPORT_OVER_LISTFILE
 tsTIGHmi
, R_TRIG

END_IMPORT

FUNCTION_BLOCK FBHmiDataSet #DUMMY_EDIT_BLOCK

VAR_INPUT
 Execute : BOOL (* starts command to hmi *);
 Save : BOOL (* false ... LOAD, true ... SAVE *);
END_VAR

VAR_IN_OUT
 sParam : STRING(255) (* name of dataset *);
END_VAR

VAR_OUTPUT
 Done : BOOL (* command done without error *);
 Error : BOOL (* command done but error *);
END_VAR

SYSTEM_VAR
 sv_TIGHmi : tsTIGHmi;
END_VAR

VAR
 fbExecTrig : R_TRIG;
 miStart : INT;
 bStarted : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

fbExecTrig(Execute); 

IF Execute = FALSE THEN 
   Done := FALSE; 
   Error := FALSE; 
END_IF; 

IF NOT bStarted THEN 
   IF fbExecTrig.Q THEN 
      bStarted := TRUE; 
      miStart := DINT_TO_INT(sv_TIGHmi.dataSet.DSCmd2Hmi.iCmd); 
   
      sv_TIGHmi.dataSet.DSCmd2Hmi.sParam := sParam; 
   
      // miStart MOD 2 = 1 starts the command
      miStart := miStart + ((miStart MOD 2) + 1);
      
      sv_TIGHmi.dataSet.DSCmd2Hmi.iCmd := DWORD_TO_DINT(SHL(BOOL_TO_DWORD(Save), 16)) + INT_TO_DINT(miStart); 
   END_IF; 
ELSE 
   // MOD 2 = 0 cmd finished
   IF (sv_TIGHmi.dataSet.DSCmd2Hmi.iCmd MOD 2) = 0 THEN 
      bStarted := FALSE; 
      Error := DWORD_TO_BOOL((DINT_TO_DWORD(sv_TIGHmi.dataSet.DSCmd2Hmi.iCmd) AND 16#FFFF0000)); 
      Done := NOT Error; 
   END_IF;
END_IF; 


;#END_EDIT_BLOCK END_FUNCTION_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 60 @Pou 25 
@@@BEG_Comment@@@
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

command to HMI: load or save dataset

@FunctionID: A-VAR-16.5
TIG 3.11.6
@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
0 
@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@FUNCTION_BLOCK @RT(12)FBHmiDataSet @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
9 
@Var @RT(9)sv_TIGHmi @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(8)tsTIGHmi @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(7)Execute @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(21)starts command to hmi @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(4)Save @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(29)false ... LOAD, true ... SAVE @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(6)sParam @RT(0) @T @F @DT @RT(11)STRING(255) @RT(0) @T @T @STRING 0 @F @RT(3)255 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(15)name of dataset @RT(0) 
@END_Attrib 
1 2 @F @F @F @F 

@Var @RT(4)Done @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(26)command done without error @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(5)Error @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(22)command done but error @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(10)fbExecTrig @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(6)R_TRIG @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(7)miStart @RT(0) @T @F @DT @RT(3)INT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(8)bStarted @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(33)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

fbExecTrig(Execute); 

IF Execute = FALSE THEN 
   Done := FALSE; 
   Error := FALSE; 
END_IF; 

IF NOT bStarted THEN 
   IF fbExecTrig.Q THEN 
      bStarted := TRUE; 
      miStart := DINT_TO_INT(sv_TIGHmi.dataSet.DSCmd2Hmi.iCmd); 
   
      sv_TIGHmi.dataSet.DSCmd2Hmi.sParam := sParam; 
   
      // miStart MOD 2 = 1 starts the command
      miStart := miStart + ((miStart MOD 2) + 1);
      
      sv_TIGHmi.dataSet.DSCmd2Hmi.iCmd := DWORD_TO_DINT(SHL(BOOL_TO_DWORD(Save), 16)) + INT_TO_DINT(miStart); 
   END_IF; 
ELSE 
   // MOD 2 = 0 cmd finished
   IF (sv_TIGHmi.dataSet.DSCmd2Hmi.iCmd MOD 2) = 0 THEN 
      bStarted := FALSE; 
      Error := DWORD_TO_BOOL((DINT_TO_DWORD(sv_TIGHmi.dataSet.DSCmd2Hmi.iCmd) AND 16#FFFF0000)); 
      Done := NOT Error; 
   END_IF;
END_IF; 

@END_Body 

@END_Contents 
