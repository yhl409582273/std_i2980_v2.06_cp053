(*
Move into some direction by

-number of impulses
or
-number of seconds

check if movement was stopped before reaching number of impulses or seconds
*)

IMPORT_OVER_LISTFILE
 cMoveFwdForMHAdjust
, tsDeviceId
, tMoveIdent
, ABMoveTimeLimited
, FBCheckReady
//  FBCheckPosReached
, tevStartRequest
, tevStartRequestData
, tsEndpointMonitor

END_IMPORT

FUNCTION_BLOCK FBMoveMHTimeOrImpulses #DUMMY_EDIT_BLOCK

VAR_INPUT
 bUseImpulses : BOOL;
 dTime : TIME;
 iImpulses : UDINT;
 DeviceId : tsDeviceId;
 MoveDir : tMoveIdent;
 MoveId : tMoveIdent;
END_VAR

VAR_OUTPUT
 bDone : BOOL;
 bAtTargetPos : BOOL;
END_VAR

SYSTEM_VAR
 sv_iThisStepsSetImpulses : UDINT;
 sv_bStandStillDetectionArmed : BOOL;
 sv_MoldHeightEndpoints : tsEndpointMonitor;
END_VAR

SYSTEM_OBJECT
 evStartRequest : tevStartRequest;
END_OBJECT

VAR
 abMoveTimeLimited : ABMoveTimeLimited;
 fbCheckReady : FBCheckReady;
 // fbCheckPosReached : FBCheckPosReached;
 evStartRequestData : tevStartRequestData;
END_VAR

(* IecGraph-Code *)

(* init step *)
INITIAL_STEP Step1:
Action6 (N);
END_STEP

ACTION Action6: #BEGIN_EDIT_BLOCK
sv_bStandStillDetectionArmed := FALSE;
bDone := FALSE;

;#END_EDIT_BLOCK END_ACTION (*Action6*)

(* steps *)
STEP S_Impulses:
aStartImpulses (P);
aCheckImpulses (N);
END_STEP

STEP Step8:
Action12 (N);
END_STEP

ACTION Action12: #BEGIN_EDIT_BLOCK
bAtTargetPos := sv_MoldHeightEndpoints.bPositionForStepReached;

;#END_EDIT_BLOCK END_ACTION (*Action12*)
STEP S_Time:
aInitMoveTime (P);
aMoveTime (N);
END_STEP

STEP Step7:
Action11 (N);
END_STEP

ACTION Action11: #BEGIN_EDIT_BLOCK
bAtTargetPos := abMoveTimeLimited.aMove.bTimeReached;

;#END_EDIT_BLOCK END_ACTION (*Action11*)
STEP Step2:
aDone (P);
END_STEP

ACTION aDone: #BEGIN_EDIT_BLOCK
bDone := TRUE;

;#END_EDIT_BLOCK END_ACTION (*aDone*)

(* transitions *)
TRANSITION Trans1 FROM Step1 TO S_Impulses :=  #BEGIN_EDIT_BLOCK
bUseImpulses
;#END_EDIT_BLOCK
END_TRANSITION

TRANSITION Trans3 FROM S_Impulses TO Step8 :=  #BEGIN_EDIT_BLOCK
fbCheckReady.bReady
;#END_EDIT_BLOCK
END_TRANSITION

GO_ON_TRANSITION Trans8 FROM Step8 TO Step2 :=  #BEGIN_EDIT_BLOCK
TRUE
;#END_EDIT_BLOCK
END_TRANSITION

TRANSITION Trans2 FROM Step1 TO S_Time :=  #BEGIN_EDIT_BLOCK
NOT bUseImpulses
;#END_EDIT_BLOCK
END_TRANSITION

TRANSITION Trans4 FROM S_Time TO Step7 :=  #BEGIN_EDIT_BLOCK
abMoveTimeLimited.aMove.bDone
;#END_EDIT_BLOCK
END_TRANSITION

GO_ON_TRANSITION Trans7 FROM Step7 TO Step2 :=  #BEGIN_EDIT_BLOCK
TRUE
;#END_EDIT_BLOCK
END_TRANSITION

TRANSITION Trans6 FROM Step2 TO Step1 :=  #BEGIN_EDIT_BLOCK
TRUE
;#END_EDIT_BLOCK
END_TRANSITION

(* end IecGraph-Code *)
(* sfc-code *)

(* stand alone actions *)
ACTION aMoveTime: #BEGIN_EDIT_BLOCK
abMoveTimeLimited.aMove(dTime := dTime, DeviceId := DeviceId, MoveDir := MoveDir, MoveId := MoveId);

;#END_EDIT_BLOCK END_ACTION (*aMoveTime*)
ACTION aStartImpulses: #BEGIN_EDIT_BLOCK
sv_iThisStepsSetImpulses := iImpulses;

evStartRequestData.DeviceId := DeviceId;
evStartRequestData.MoveDir := MoveDir;
evStartRequestData.MoveId := MoveId;
SET_EVENT(evStartRequest, evStartRequestData);


;#END_EDIT_BLOCK END_ACTION (*aStartImpulses*)
ACTION aInitMoveTime: #BEGIN_EDIT_BLOCK
sv_iThisStepsSetImpulses := 100000000;

;#END_EDIT_BLOCK END_ACTION (*aInitMoveTime*)
ACTION aCheckImpulses: #BEGIN_EDIT_BLOCK

fbCheckReady(DeviceId := DeviceId);

//fbCheckPosReached(DeviceId := DeviceId,                  
//                  MoveDir := MoveDir,
//                  MoveId := MoveId);


;#END_EDIT_BLOCK END_ACTION (*aCheckImpulses*)
(* end sfc-code *)


END_FUNCTION_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 30 @Pou 25 
@@@BEG_Comment@@@
Move into some direction by

-number of impulses
or
-number of seconds

check if movement was stopped before reaching number of impulses or seconds
@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
0 
@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
1 
@Var @RT(19)cMoveFwdForMHAdjust @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
0 @RT(2)32 @RT(61)mold forward movement during automatic mold height adjustment 
@END_Attrib 
1 1 @F @F @F @F 

@END_Const 

@BEG_Export 

@BEG_Kind 
@FUNCTION_BLOCK @RT(22)FBMoveMHTimeOrImpulses @SEQUENTIAL_FLOW_CHART 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
16 
@Var @RT(12)bUseImpulses @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(5)dTime @RT(0) @T @F @DT @RT(4)TIME @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(9)iImpulses @RT(0) @T @F @DT @RT(5)UDINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(8)DeviceId @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tsDeviceId @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(7)MoveDir @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tMoveIdent @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(6)MoveId @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tMoveIdent @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(5)bDone @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(12)bAtTargetPos @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(24)sv_iThisStepsSetImpulses @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(5)UDINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(17)abMoveTimeLimited @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(17)ABMoveTimeLimited @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(12)fbCheckReady @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(12)FBCheckReady @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(17)fbCheckPosReached @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(17)FBCheckPosReached @RT(0) @T @T @UNKNOWN 0 @F 
@F @T 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(28)sv_bStandStillDetectionArmed @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(14)evStartRequest @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(15)tevStartRequest @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(18)evStartRequestData @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(19)tevStartRequestData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(22)sv_MoldHeightEndpoints @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(17)tsEndpointMonitor @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_SfcBody 
13 9 9 

@BEG_SfcData 2 
@StepSeq @RT(4)sseq @F 1 
@Loop @RT(4)loop @F 2 
@StepSeq @RT(3)seq @F 3 
@Step @RT(5)Step1 @F @T @F @F @RT(0) @F 
@AcbCont @RT(7)unnamed @F 1 
@Acb @RT(7)Action6 @F @T @RT(1)N @RT(0) @F @F @T @TL(3)
sv_bStandStillDetectionArmed := FALSE;
bDone := FALSE;

@F 

@AltBranch @RT(3)alt @F 2 
@TransSeq @RT(4)tseq @F 5 
@Trans @RT(6)Trans1 @F @T @F @F @T @T @TL(2)
bUseImpulses

@RT(6)Trans1 @F 
@Step @RT(10)S_Impulses @F @F @F @F @RT(0) @F 
@AcbCont @RT(7)unnamed @F 2 
@Acb @RT(14)aStartImpulses @F @F @RT(1)P @RT(0) @F @F @T @F 
@Acb @RT(14)aCheckImpulses @F @F @RT(1)N @RT(0) @F @F @T @F 

@Trans @RT(6)Trans3 @F @T @F @F @T @T @TL(2)
fbCheckReady.bReady

@RT(6)Trans3 @F 
@Step @RT(5)Step8 @F @F @F @F @RT(0) @F 
@AcbCont @RT(7)unnamed @F 1 
@Acb @RT(8)Action12 @F @T @RT(1)N @RT(0) @F @F @T @TL(2)
bAtTargetPos := sv_MoldHeightEndpoints.bPositionForStepReached;

@F 

@Trans @RT(6)Trans8 @F @T @F @F @T @F @TL(2)
TRUE

@RT(6)Trans8 @F 

@TransSeq @RT(4)tseq @F 5 
@Trans @RT(6)Trans2 @F @T @F @F @T @T @TL(2)
NOT bUseImpulses

@RT(6)Trans2 @F 
@Step @RT(6)S_Time @F @F @F @F @RT(0) @F 
@AcbCont @RT(7)unnamed @F 2 
@Acb @RT(13)aInitMoveTime @F @F @RT(1)P @RT(0) @F @F @T @F 
@Acb @RT(9)aMoveTime @F @F @RT(1)N @RT(0) @F @F @T @F 

@Trans @RT(6)Trans4 @F @T @F @F @T @T @TL(2)
abMoveTimeLimited.aMove.bDone

@RT(6)Trans4 @F 
@Step @RT(5)Step7 @F @F @F @F @RT(0) @F 
@AcbCont @RT(7)unnamed @F 1 
@Acb @RT(8)Action11 @F @T @RT(1)N @RT(0) @F @F @T @TL(2)
bAtTargetPos := abMoveTimeLimited.aMove.bTimeReached;

@F 

@Trans @RT(6)Trans7 @F @T @F @F @T @F @TL(2)
TRUE

@RT(6)Trans7 @F 


@Step @RT(5)Step2 @F @F @F @F @RT(0) @F 
@AcbCont @RT(7)unnamed @F 1 
@Acb @RT(5)aDone @F @T @RT(1)P @RT(0) @F @F @T @TL(2)
bDone := TRUE;

@F 


@Trans @RT(6)Trans6 @F @T @T @T @T @T @TL(2)
TRUE

@RT(6)Trans6 @F 

@END_SfcData 
@SaActions 4 
@SaText @RT(9)aMoveTime 1 @TL(2)
abMoveTimeLimited.aMove(dTime := dTime, DeviceId := DeviceId, MoveDir := MoveDir, MoveId := MoveId);


@SaText @RT(14)aStartImpulses 1 @TL(8)
sv_iThisStepsSetImpulses := iImpulses;

evStartRequestData.DeviceId := DeviceId;
evStartRequestData.MoveDir := MoveDir;
evStartRequestData.MoveId := MoveId;
SET_EVENT(evStartRequest, evStartRequestData);



@SaText @RT(13)aInitMoveTime 1 @TL(2)
sv_iThisStepsSetImpulses := 100000000;


@SaText @RT(14)aCheckImpulses 1 @TL(8)

fbCheckReady(DeviceId := DeviceId);

//fbCheckPosReached(DeviceId := DeviceId,                  
//                  MoveDir := MoveDir,
//                  MoveId := MoveId);



@SaTrans 0 
@SaExits 0 
@END_SfcBody 

@END_Contents 
