IMPORT_OVER_LISTFILE
 IS_LINKED
, tyPanelButton
, tevPanelButtonRegisterData
, tevPanelButtonRegister
, ABManualButton
, tsDeviceId
, tsPanelButton

END_IMPORT

ALGORITHM_BLOCK ABButtonControl #DUMMY_EDIT_BLOCK

SYSTEM_VAR
 sv_bInitStart : BOOL;
 sv_bDeviceReady : BOOL;
 sv_iPanelMovementSelector : DINT;
 sv_bHMILedAutoAdjust_ledAttr : BYTE;
 sv_bHMILedAutoAdjust : BOOL;
 sv_PanelButtons : tyPanelButton;
 di_ButtonGeneral1 : BOOL;
 di_ButtonGeneral2 : BOOL;
 sv_DeviceId : tsDeviceId;
 di_ButtonStart : BOOL;
 sv_bButtonStart : BOOL;
END_VAR

SYSTEM_OBJECT
 evPanelButtonRegister : tevPanelButtonRegister;
 PU_Task_7 : TASK;
 PU_Task_13 : TASK;
END_OBJECT

VAR
 evPanelButtonRegisterData : tevPanelButtonRegisterData;
 abManualButton : ABManualButton;
 mpbButtonGeneralFwd : REFTO BOOL;
 mpbButtonGeneralBwd : REFTO BOOL;
 mbDIButtonStartLinked : BOOL;
 mbDIButtonGeneral1Linked : BOOL;
 mbDIButtonGeneral2Linked : BOOL;
 mpiPanelMovementSelector : REFTO DINT;
END_VAR

VAR CONSTANT
 cButtonMoveStart : DINT := 1;
END_VAR

POSTUPDATE_ALGORITHM pRegisterButtons ON PU_Task_13 WITH sv_bInitStart

#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

mpbButtonGeneralFwd := EMPTY;
mpbButtonGeneralBwd := EMPTY;

mbDIButtonStartLinked := IS_LINKED(di_ButtonStart);

mbDIButtonGeneral1Linked := IS_LINKED(di_ButtonGeneral1);
mbDIButtonGeneral2Linked := IS_LINKED(di_ButtonGeneral2);

IF (mbDIButtonGeneral1Linked AND mbDIButtonGeneral2Linked) THEN
    mpiPanelMovementSelector := @sv_iPanelMovementSelector;
END_IF;


// register start button
evPanelButtonRegisterData.Button.nPanelButtonType := nPanelButtonMovement; 
evPanelButtonRegisterData.Button.iCompId := sv_DeviceId.CompId;
evPanelButtonRegisterData.Button.iIndexId := sv_DeviceId.IndexId;
evPanelButtonRegisterData.Button.iButtonId := cButtonMoveStart;
evPanelButtonRegisterData.Button.pbActionVar1 := @sv_bButtonStart;
evPanelButtonRegisterData.Button.pbActionVar2 := @sv_bButtonStart;
evPanelButtonRegisterData.Button.Optional.pbLedVar := @sv_bHMILedAutoAdjust;
evPanelButtonRegisterData.Button.Optional.piLedVarAttr := @sv_bHMILedAutoAdjust_ledAttr;
SET_EVENT(evPanelButtonRegister, evPanelButtonRegisterData);


;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pButtonStart ON PU_Task_7 WITH di_ButtonStart,sv_bButtonStart,mpbButtonGeneralBwd^,mpbButtonGeneralFwd^


VAR
 bButton : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

// soft panel button
bButton := sv_bButtonStart;

// hw panel button
IF mbDIButtonStartLinked THEN
    bButton := bButton OR di_ButtonStart;    
END_IF;

// external panel button
IF CHECK_REF(mpbButtonGeneralBwd^) THEN
    bButton := bButton OR mpbButtonGeneralBwd^;
END_IF;
IF CHECK_REF(mpbButtonGeneralFwd^) THEN
    bButton := bButton OR mpbButtonGeneralFwd^;
END_IF;

abManualButton.aButtonStart(bButtonStart := bButton);



;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pMoveSelectorChanged ON PU_Task_7 WITH mpiPanelMovementSelector^


VAR
 Button : tsPanelButton;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
mpbButtonGeneralFwd := EMPTY;
mpbButtonGeneralBwd := EMPTY;

IF (NOT sv_bDeviceReady) THEN
    // stop active movements
    abManualButton.aButtonStart(bButtonStart := FALSE);
END_IF;

IF (sv_iPanelMovementSelector > 0) THEN                        
    Button := sv_PanelButtons[sv_iPanelMovementSelector];
    IF (Button.iCompId = sv_DeviceId.CompId AND 
        Button.iIndexId = sv_DeviceId.IndexId) THEN
        IF (Button.iButtonId = cButtonMoveStart) THEN
            mpbButtonGeneralFwd := @di_ButtonGeneral2;
            mpbButtonGeneralBwd := @di_ButtonGeneral1;          
        END_IF;    
    END_IF;        
END_IF;





;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 152 @Pou 25 
@@@BEG_Comment@@@

@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
1 
@Var @RT(9)IS_LINKED @RT(0) @T @T @DERIVED 0 @F @RT(22)KEBA_STANDARD_FUNCTION @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(15)ABButtonControl @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
23 
@Var @RT(13)sv_bInitStart @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(15)sv_bDeviceReady @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(25)sv_iPanelMovementSelector @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(28)sv_bHMILedAutoAdjust_ledAttr @RT(0) @T @F @DT @RT(4)BYTE @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(20)sv_bHMILedAutoAdjust @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(15)sv_PanelButtons @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(13)tyPanelButton @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(25)evPanelButtonRegisterData @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(26)tevPanelButtonRegisterData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(21)evPanelButtonRegister @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(22)tevPanelButtonRegister @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(14)abManualButton @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(14)ABManualButton @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(17)di_ButtonGeneral1 @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(17)di_ButtonGeneral2 @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(9)PU_Task_7 @RT(0) @T @F @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(10)PU_Task_13 @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(11)sv_DeviceId @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tsDeviceId @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(16)cButtonMoveStart @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(1)1 @RT(0) @RT(0) 
@END_Attrib 
1 15 @F @F @F @F 

@Var @RT(19)mpbButtonGeneralFwd @RT(0) @T @T @REFTO 0 @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(19)mpbButtonGeneralBwd @RT(0) @T @T @REFTO 0 @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(21)mbDIButtonStartLinked @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(24)mbDIButtonGeneral1Linked @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(24)mbDIButtonGeneral2Linked @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(14)di_ButtonStart @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(15)sv_bButtonStart @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(24)mpiPanelMovementSelector @RT(0) @T @T @REFTO 0 @T @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

3 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(16)pRegisterButtons @STRUCTURED_TEXT 
@RT(0) @RT(13)sv_bInitStart @RT(10)PU_Task_13 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(12)pButtonStart @STRUCTURED_TEXT 
@RT(0) @RT(72)di_ButtonStart,sv_bButtonStart,mpbButtonGeneralBwd^,mpbButtonGeneralFwd^ @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(7)bButton @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(20)pMoveSelectorChanged @STRUCTURED_TEXT 
@RT(0) @RT(25)mpiPanelMovementSelector^ @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(6)Button @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(13)tsPanelButton @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(29)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

mpbButtonGeneralFwd := EMPTY;
mpbButtonGeneralBwd := EMPTY;

mbDIButtonStartLinked := IS_LINKED(di_ButtonStart);

mbDIButtonGeneral1Linked := IS_LINKED(di_ButtonGeneral1);
mbDIButtonGeneral2Linked := IS_LINKED(di_ButtonGeneral2);

IF (mbDIButtonGeneral1Linked AND mbDIButtonGeneral2Linked) THEN
    mpiPanelMovementSelector := @sv_iPanelMovementSelector;
END_IF;


// register start button
evPanelButtonRegisterData.Button.nPanelButtonType := nPanelButtonMovement; 
evPanelButtonRegisterData.Button.iCompId := sv_DeviceId.CompId;
evPanelButtonRegisterData.Button.iIndexId := sv_DeviceId.IndexId;
evPanelButtonRegisterData.Button.iButtonId := cButtonMoveStart;
evPanelButtonRegisterData.Button.pbActionVar1 := @sv_bButtonStart;
evPanelButtonRegisterData.Button.pbActionVar2 := @sv_bButtonStart;
evPanelButtonRegisterData.Button.Optional.pbLedVar := @sv_bHMILedAutoAdjust;
evPanelButtonRegisterData.Button.Optional.piLedVarAttr := @sv_bHMILedAutoAdjust_ledAttr;
SET_EVENT(evPanelButtonRegister, evPanelButtonRegisterData);

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(24)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

// soft panel button
bButton := sv_bButtonStart;

// hw panel button
IF mbDIButtonStartLinked THEN
    bButton := bButton OR di_ButtonStart;    
END_IF;

// external panel button
IF CHECK_REF(mpbButtonGeneralBwd^) THEN
    bButton := bButton OR mpbButtonGeneralBwd^;
END_IF;
IF CHECK_REF(mpbButtonGeneralFwd^) THEN
    bButton := bButton OR mpbButtonGeneralFwd^;
END_IF;

abManualButton.aButtonStart(bButtonStart := bButton);


@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(26)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
mpbButtonGeneralFwd := EMPTY;
mpbButtonGeneralBwd := EMPTY;

IF (NOT sv_bDeviceReady) THEN
    // stop active movements
    abManualButton.aButtonStart(bButtonStart := FALSE);
END_IF;

IF (sv_iPanelMovementSelector > 0) THEN                        
    Button := sv_PanelButtons[sv_iPanelMovementSelector];
    IF (Button.iCompId = sv_DeviceId.CompId AND 
        Button.iIndexId = sv_DeviceId.IndexId) THEN
        IF (Button.iButtonId = cButtonMoveStart) THEN
            mpbButtonGeneralFwd := @di_ButtonGeneral2;
            mpbButtonGeneralBwd := @di_ButtonGeneral1;          
        END_IF;    
    END_IF;        
END_IF;




@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 
@END_Body 

@END_Contents 
