IMPORT_OVER_LISTFILE
 GET_SYNC_REFTO
, cOptionHydraulic
, tyAdjustModePlaus
, KSYS_Status
, tOptionId

END_IMPORT

PLAUSIBILITY_FUNCTION FPlausAdjustMode : tyAdjustModePlaus

VAR_INPUT
 DeviceClass : INT;
 Userlevel : INT;
END_VAR

VAR
 state : KSYS_Status;
 pMoldOptions : REFTO tOptionId;
 bDirectLock : BOOL;
 bElectric : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
 
//selectable modes depend on machine type
//(electric, hydraulic, direct lock)
pMoldOptions := GET_SYNC_REFTO('Mold1.sv_Options', T#0s, state);

IF state = KSYS_Status_OK THEN
   bElectric := (pMoldOptions^ AND cOptionElectric) = cOptionElectric;
   bDirectLock := (pMoldOptions^ AND cSubOptionMoldDirectLock) = cSubOptionMoldDirectLock;
   
   IF bElectric THEN
      //electric machine
      FPlausAdjustMode[1] := nPositionChange;
      FPlausAdjustMode[2] := nPositionSetTonnage;
      FPlausAdjustMode[3] := nElectricWithMoldPos;
      FPlausAdjustMode[4] := nPositionChange;
      FPlausAdjustMode[5] := nPositionChange;
      FPlausAdjustMode[6] := nPositionChange;
   ELSE
      //hydraulic machine
      IF bDirectLock THEN
         FPlausAdjustMode[1] := nDirectLock;
         FPlausAdjustMode[2] := nDirectLock;
         FPlausAdjustMode[3] := nDirectLock;
         FPlausAdjustMode[4] := nDirectLock;
         FPlausAdjustMode[5] := nDirectLock;
         FPlausAdjustMode[6] := nDirectLock;
      ELSE
         FPlausAdjustMode[1] := nPositionChange;        
         FPlausAdjustMode[2] := nForceOpenLoop;
         FPlausAdjustMode[3] := nPressureOpenLoop;
         FPlausAdjustMode[4] := nPressureOpenLoop;
         FPlausAdjustMode[5] := nPressureOpenLoop;
         FPlausAdjustMode[6] := nPressureOpenLoop;
      END_IF;
      
   END_IF;                   
   
END_IF;






;#END_EDIT_BLOCK END_FUNCTION



#END_OF_IEC_PART

@Puma @IecEditor 6 114 @Pou 25 
@@@BEG_Comment@@@

@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
1 
@Var @RT(14)GET_SYNC_REFTO @RT(0) @T @T @DERIVED 0 @F @RT(22)KEBA_STANDARD_FUNCTION @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
1 
@Var @RT(16)cOptionHydraulic @RT(0) @T @F @DT @RT(5)DWORD @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
0 @RT(5)16#01 @RT(26)Hydraulic device, LSB is 1 
@END_Attrib 
1 1 @F @F @F @F 

@END_Const 

@BEG_Export 

@BEG_Kind 
@PLAUSIBILITY_FUNCTION @RT(16)FPlausAdjustMode @STRUCTURED_TEXT 
@RT(17)tyAdjustModePlaus @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
6 
@Var @RT(11)DeviceClass @RT(0) @T @F @DT @RT(3)INT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
0 1 @F @F @F @F 

@Var @RT(9)Userlevel @RT(0) @T @F @DT @RT(3)INT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
0 1 @F @F @F @F 

@Var @RT(5)state @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(11)KSYS_Status @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(12)pMoldOptions @RT(0) @T @T @REFTO 0 @F @DERIVED 0 @T @T @DT @RT(9)tOptionId @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(11)bDirectLock @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(9)bElectric @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(47)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
 
//selectable modes depend on machine type
//(electric, hydraulic, direct lock)
pMoldOptions := GET_SYNC_REFTO('Mold1.sv_Options', T#0s, state);

IF state = KSYS_Status_OK THEN
   bElectric := (pMoldOptions^ AND cOptionElectric) = cOptionElectric;
   bDirectLock := (pMoldOptions^ AND cSubOptionMoldDirectLock) = cSubOptionMoldDirectLock;
   
   IF bElectric THEN
      //electric machine
      FPlausAdjustMode[1] := nPositionChange;
      FPlausAdjustMode[2] := nPositionSetTonnage;
      FPlausAdjustMode[3] := nElectricWithMoldPos;
      FPlausAdjustMode[4] := nPositionChange;
      FPlausAdjustMode[5] := nPositionChange;
      FPlausAdjustMode[6] := nPositionChange;
   ELSE
      //hydraulic machine
      IF bDirectLock THEN
         FPlausAdjustMode[1] := nDirectLock;
         FPlausAdjustMode[2] := nDirectLock;
         FPlausAdjustMode[3] := nDirectLock;
         FPlausAdjustMode[4] := nDirectLock;
         FPlausAdjustMode[5] := nDirectLock;
         FPlausAdjustMode[6] := nDirectLock;
      ELSE
         FPlausAdjustMode[1] := nPositionChange;        
         FPlausAdjustMode[2] := nForceOpenLoop;
         FPlausAdjustMode[3] := nPressureOpenLoop;
         FPlausAdjustMode[4] := nPressureOpenLoop;
         FPlausAdjustMode[5] := nPressureOpenLoop;
         FPlausAdjustMode[6] := nPressureOpenLoop;
      END_IF;
      
   END_IF;                   
   
END_IF;





@END_Body 

@END_Contents 
