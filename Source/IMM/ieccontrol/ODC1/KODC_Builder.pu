(*
Read and parse ODC description files and build a corresponding 2 dimesional array
of movements which can be executed as a machine cycle.
*)

IMPORT_OVER_LISTFILE
 KODC_Movements
, KODC_Sequence

END_IMPORT

KEBA_STANDARD_ALGORITHM_BLOCK KODC_Builder #DUMMY_EDIT_BLOCK

VAR
 pObj : UDINT;
END_VAR

(*
Initialize the Block
Description files are read from the given directory.
*)

ALGORITHM Init


VAR_INPUT
 DescriptionFilePath : STRING(255);
 Execute : BOOL;
END_VAR

VAR_IN_OUT
 Movements : KODC_Movements;
END_VAR

VAR_OUTPUT
 Done : BOOL;
 Error : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK



#END_EDIT_BLOCK END_ALGORITHM

(*
Create a sequence from the Description files read earlier
(depending on program switches)
Copy this sequence to the 2 dimensional array called Sequence

This needs to be executed every time program switch changes 
*)

ALGORITHM CreateSequence


VAR_INPUT
 Columns : DINT;
 Rows : DINT;
 Execute : BOOL;
END_VAR

VAR_IN_OUT
 Sequence : KODC_Sequence;
END_VAR

VAR_OUTPUT
 Done : BOOL;
 Error : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK



#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 96 @Pou 25 
@@@BEG_Comment@@@
Read and parse ODC description files and build a corresponding 2 dimesional array
of movements which can be executed as a machine cycle.
@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
0 
@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@KEBA_STANDARD_ALGORITHM_BLOCK @RT(12)KODC_Builder @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(4)pObj @RT(0) @T @F @DT @RT(5)UDINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
0 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

2 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(4)Init @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
5 
@Var @RT(19)DescriptionFilePath @RT(0) @T @F @DT @RT(11)STRING(255) @RT(0) @T @T @STRING 0 @F @RT(3)255 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(7)Execute @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(9)Movements @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(14)KODC_Movements @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 2 @F @F @F @F 

@Var @RT(4)Done @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(5)Error @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(14)CreateSequence @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
6 
@Var @RT(7)Columns @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(4)Rows @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(7)Execute @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(8)Sequence @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(13)KODC_Sequence @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
0 2 @F @F @F @F 

@Var @RT(4)Done @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(5)Error @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(2)


@END_Body 

@@@BEG_Comment@@@ 
@TL(2)
Initialize the Block
Description files are read from the given directory.
@@@END_Comment@@@ 

@BEG_Body 
@TL(2)


@END_Body 

@@@BEG_Comment@@@ 
@TL(5)
Create a sequence from the Description files read earlier
(depending on program switches)
Copy this sequence to the 2 dimensional array called Sequence

This needs to be executed every time program switch changes 
@@@END_Comment@@@ 
@END_Body 

@END_Contents 
@@@BEG_Password@@@
NGhzZm9kYzQ=
@@@END_Password@@@
