(*
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".
*)

IMPORT_OVER_LISTFILE
 FHostTypeToString
, GET_TASK_INTERVAL
, FCreateHostComVersion
, cHostTypeNone
, cHostTypeOPCUA_EM77
, tsHostHmi
, tsHostCom
, tsEM77
, tsEM63
, KPROT_Status

END_IMPORT

ALGORITHM_BLOCK ABHostCom #DUMMY_EDIT_BLOCK

SYSTEM_VAR
 sv_HostHmi : tsHostHmi;
 sv_bHostAvailable : BOOL;
 sv_HostCom : tsHostCom;
 sv_bInitDone : BOOL (* IEC initialisation is finished (after movement registration) *);
 sv_EM77 : tsEM77;
 sv_EM63 : tsEM63;
END_VAR

SYSTEM_OBJECT
 TaskVis : TASK;
END_OBJECT

VAR
 msILog : STRING(128);
END_VAR

(*
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

connection supervision


*)

PROCESS_ALGORITHM paCheckConnection ON TaskVis AUTOSTART


VAR
 iStep : DINT;
 cycleTime : TIME;
 timeOutCnt : DINT;
 b : BOOL;
END_VAR

VAR CONSTANT
 connectionTimeout : TIME := T#30s;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

// Init Step
IF iStep = 0 THEN
   b := FCreateHostComVersion();
   cycleTime := GET_TASK_INTERVAL();
   iStep := 10;
END_IF;

// not connected step
IF iStep = 10 THEN
   sv_HostHmi.bIsConnected := FALSE;   
   IF (sv_HostCom.bConnect AND (sv_HostCom.iHostTypeId <> cHostTypeNone) AND sv_bInitDone) THEN
      IF (sv_HostCom.iHostTypeId = cHostTypeOPC_EM63) THEN
         sv_EM63.bActivate := TRUE;       
      ELSIF (sv_HostCom.iHostTypeId = cHostTypeOPCUA_EM77) THEN 
         sv_EM77.bAvailable := TRUE; 
         sv_EM77.bActivate := TRUE; 
      END_IF;
      iStep := 20;    
   END_IF;
END_IF;

// connected step
IF iStep = 20 THEN
   sv_HostHmi.bIsConnected := TRUE;
                  
   sv_HostCom.bConnect := FALSE;      
   timeOutCnt := LINT_TO_DINT(TIME_TO_LINT(connectionTimeout) / TIME_TO_LINT(cycleTime));
   iStep := 30;   
END_IF;
          

// wait for connected bit
IF iStep = 30 THEN
   timeOutCnt := timeOutCnt - 1;
   IF sv_HostCom.bConnect THEN
      iStep := 20;   
   END_IF;
   IF timeOutCnt = 0 THEN
      iStep := 10; 
   END_IF;
END_IF;






;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pLogHostConnected ON TaskVis WITH sv_HostHmi.bIsConnected


VAR
 s : KPROT_Status;
 sType : STRING(16);
END_VAR
#BEGIN_EDIT_BLOCK
sType := FHostTypeToString(sv_HostCom.iHostTypeId);
msILog := CONCAT("Control station of type ", DINT_TO_STRING(sv_HostCom.iHostTypeId), " (", sType, ") ");

IF (sv_HostHmi.bIsConnected) THEN
    sv_bHostAvailable := TRUE;  
    msILog := CONCAT(msILog, "connected");
ELSE 
    msILog := CONCAT(msILog, "disconnected");
END_IF;

                                            
s := KPROT_UserInfoLog("%5s", 100, BOOL_TO_DINT(sv_HostHmi.bIsConnected), sv_HostCom.iHostTypeId, 0, msILog);




;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 114 @Pou 25 
@@@BEG_Comment@@@
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".
@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
3 
@Var @RT(17)FHostTypeToString @RT(0) @T @T @DERIVED 0 @F @RT(8)FUNCTION @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(17)GET_TASK_INTERVAL @RT(0) @T @T @DERIVED 0 @F @RT(22)KEBA_STANDARD_FUNCTION @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(21)FCreateHostComVersion @RT(0) @T @T @DERIVED 0 @F @RT(8)FUNCTION @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
2 
@Var @RT(13)cHostTypeNone @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
0 @RT(1)0 @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(19)cHostTypeOPCUA_EM77 @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
0 @RT(1)7 @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(9)ABHostCom @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
8 
@Var @RT(7)TaskVis @RT(0) @T @F @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(10)sv_HostHmi @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(9)tsHostHmi @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(17)sv_bHostAvailable @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(10)sv_HostCom @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(9)tsHostCom @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(12)sv_bInitDone @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(60)IEC initialisation is finished (after movement registration) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(6)msILog @RT(0) @T @F @DT @RT(11)STRING(128) @RT(0) @T @T @STRING 0 @F @RT(3)128 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(7)sv_EM77 @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(6)tsEM77 @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(7)sv_EM63 @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(6)tsEM63 @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

2 

@BEG_Export 

@BEG_Algo 
@PROCESS_ALGORITHM @RT(17)paCheckConnection @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(7)TaskVis @T @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
5 
@Var @RT(5)iStep @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(9)cycleTime @RT(0) @T @F @DT @RT(4)TIME @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(17)connectionTimeout @RT(0) @T @F @DT @RT(4)TIME @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(5)T#30s @RT(0) @RT(0) 
@END_Attrib 
1 15 @F @F @F @F 

@Var @RT(10)timeOutCnt @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(1)b @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(17)pLogHostConnected @STRUCTURED_TEXT 
@RT(0) @RT(23)sv_HostHmi.bIsConnected @RT(7)TaskVis @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
2 
@Var @RT(1)s @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(12)KPROT_Status @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(5)sType @RT(0) @T @F @DT @RT(10)STRING(16) @RT(0) @T @T @STRING 0 @F @RT(2)16 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(51)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

// Init Step
IF iStep = 0 THEN
   b := FCreateHostComVersion();
   cycleTime := GET_TASK_INTERVAL();
   iStep := 10;
END_IF;

// not connected step
IF iStep = 10 THEN
   sv_HostHmi.bIsConnected := FALSE;   
   IF (sv_HostCom.bConnect AND (sv_HostCom.iHostTypeId <> cHostTypeNone) AND sv_bInitDone) THEN
      IF (sv_HostCom.iHostTypeId = cHostTypeOPC_EM63) THEN
         sv_EM63.bActivate := TRUE;       
      ELSIF (sv_HostCom.iHostTypeId = cHostTypeOPCUA_EM77) THEN 
         sv_EM77.bAvailable := TRUE; 
         sv_EM77.bActivate := TRUE; 
      END_IF;
      iStep := 20;    
   END_IF;
END_IF;

// connected step
IF iStep = 20 THEN
   sv_HostHmi.bIsConnected := TRUE;
                  
   sv_HostCom.bConnect := FALSE;      
   timeOutCnt := LINT_TO_DINT(TIME_TO_LINT(connectionTimeout) / TIME_TO_LINT(cycleTime));
   iStep := 30;   
END_IF;
          

// wait for connected bit
IF iStep = 30 THEN
   timeOutCnt := timeOutCnt - 1;
   IF sv_HostCom.bConnect THEN
      iStep := 20;   
   END_IF;
   IF timeOutCnt = 0 THEN
      iStep := 10; 
   END_IF;
END_IF;





@END_Body 

@@@BEG_Comment@@@ 
@TL(13)
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

connection supervision


@@@END_Comment@@@ 

@BEG_Body 
@TL(15)
sType := FHostTypeToString(sv_HostCom.iHostTypeId);
msILog := CONCAT("Control station of type ", DINT_TO_STRING(sv_HostCom.iHostTypeId), " (", sType, ") ");

IF (sv_HostHmi.bIsConnected) THEN
    sv_bHostAvailable := TRUE;  
    msILog := CONCAT(msILog, "connected");
ELSE 
    msILog := CONCAT(msILog, "disconnected");
END_IF;

                                            
s := KPROT_UserInfoLog("%5s", 100, BOOL_TO_DINT(sv_HostHmi.bIsConnected), sv_HostCom.iHostTypeId, 0, msILog);



@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 
@END_Body 

@END_Contents 
