# This File is automatically generated by iecedit - SVEdit
# Do not edit - changes won't be reflected in other files!


# ALARMS ----------------------------------------
erDeviceReg.Cause=An Error within the initial device registration \u000aprevents any further machine operation.
erDeviceReg.Description=All devices will register themselves within the control application. In this case a problem occurred during the registration procedure.
erDeviceReg.Resolution=Please contact the machine manufacturer.
erMultipleDeviceReg.Cause=A device tried to register multiple times.
erMultipleDeviceReg.Description=Each device can only register once. In this case a device tried to register \u000amultiple times which should not happen.
erMultipleDeviceReg.Resolution=Please contact the machine manufacturer.
erMaxDeviceIndexExeeded.Cause=The maximum number of devices per \u000acomponent that can be registered within \u000athe application is exceeded.
erMaxDeviceIndexExeeded.Description=For each machine component a number of such devices can be registered \u000awithin the control application. This number is exceeded for a certain \u000acomponent type.
erMaxDeviceIndexExeeded.Resolution=Please contact the machine manufacturer.
erMaxCompIdExeeded.Cause=The maximum number of components that \u000acan be registered within the application \u000ais exceeded.
erMaxCompIdExeeded.Description=Each device type carries a component ID. For example each core carries the \u000acomponent ID for cores overall. There is a maximum component ID \u000awhich must not be exceeded, which is the case if this alarm is raised.
erMaxCompIdExeeded.Resolution=Please contact the machine manufacturer.
erMaxMovementsExeeded.Cause=The maximum number of movements per \u000adevice that can be registered within \u000athe application is exceeded.
erMaxMovementsExeeded.Description=Each device can contain several movements. The maximum number of \u000asuch movements is limited and exceeded in this case.
erMaxMovementsExeeded.Resolution=Please contact the machine manufacturer.
erMaxMoveRegisteredExeeded.Cause=The maximum number of movements that \u000acan be registered within the application \u000ais exceeded.
erMaxMoveRegisteredExeeded.Description=The overall number of movements that can register within the control application \u000ais limited. This limit is exceeded by the current application software setup.
erMaxMoveRegisteredExeeded.Resolution=Please contact the machine manufacturer.
erNoSvDeviceId.Cause=A basic device variable is missing.
erNoSvDeviceId.Description=Registration of a device is only possible with the application internal \u000asv_DeviceId variable. This alarm is raised if the variable is missing.
erNoSvDeviceId.Resolution=Please contact the machine manufacturer.
erLockListSizeExeeded.Cause=A movement should be locked, but the \u000alocklist storing all lock events is full.
erLockListSizeExeeded.Description=Movements are locked by other movements. All such locks are stored within the \u000aso called locklist. If the maximum size of the locklist is exceeded the alarm is raised.
erLockListSizeExeeded.Resolution=Try to operate the machine in a way that produces less problematic \u000alock situations.<br>\u000aIf this alarm is frequently raised without intention, please contact the \u000amachine manufacturer.
erNoSvMove.Cause=A basic device variable is missing.
erNoSvMove.Description=Registration of a device is only possible with the application internal \u000asv_MoveXxx variable. This alarm is raised if the variable is missing.
erNoSvMove.Resolution=Please contact the machine manufacturer.
erNoSvDeviceReady.Cause=A basic device variable is missing.
erNoSvDeviceReady.Description=Registration of a device is only possible with the application internal \u000asv_bDeviceReady variable. This alarm is raised if the variable is missing.
erNoSvDeviceReady.Resolution=Please contact the machine manufacturer.
erDeviceActive.Cause=A movement cannot be started because \u000athe device is already active.
erDeviceActive.Description=A movement of a certain device should be started while the same or another \u000amovement of this device is already active. One device can only perform one \u000amovement at a time.
erDeviceActive.Resolution=Wait for the device to become inactive before retrying the desired \u000aoperation.<br>\u000aIf this alarm is frequently raised without a recognizable reason, \u000aplease contact the machine manufacturer.
erInitNotReady.Cause=Initialization of the control application is \u000astill active. No movements possible during \u000athis stage of bootup.
erInitNotReady.Description=After the controller finished booting the control application itself is starting. The \u000ainitialization is one of the first stages of this process. During initialization no \u000amovements are possible.
erInitNotReady.Resolution=Wait for initialization to finish before retrying the desired operation.
erMovementRegistrationTimeout.Cause=Not all expected movements registered \u000awithin the preset timeout.
erMovementRegistrationTimeout.Description=At this point the application is waiting for further expected movements to register. \u000aWithin a given timeout the registration doesn't happen, thus the alarm is raised.
erMovementRegistrationTimeout.Resolution=Try to reboot the controller.<br>\u000aIf the alarm still appears, please contact the machine manufacturer.
erSwitchToManual.Cause=The required action is not possible because the machine is not in manual mode.
erSwitchToManual.Description=Some actions are only possible if the machine is in manual mode.
erSwitchToManual.Resolution=Change the operation mode to manual mode.
erProdLimitReached.Cause=The set number of parts to produce is \u000areached.
erProdLimitReached.Description=This is just a message and does not indicate a problem.<br>\u000aAccording to the cavities setting and the production counter the number \u000aof produced parts is calculated. This counter is then compared to the \u000aproduction limit setting in order to generate this message.
erProdLimitReached.Resolution=This is just a message, no action required.<br>\u000aA new production process can be started, a new {system.sv_iProdCounterSet:l} \u000acan be set.
erCycleTimeExceeded.Cause=The current cycle time exceeds the maximum cycle time.
erCycleTimeExceeded.Description=The current cycle execution time is limited by the user setting of maximum \u000acycle time. If this maximum time is exceeded the alarm is given.
erCycleTimeExceeded.Resolution=Increase the {system.sv_dMaxCycleTime} setting.<br>\u000aIf this is not allowed try to find component movements which can be \u000aoptimized in order to run the cycle within maximum limitations.
erListOverflow.Cause=An application internal list ran into an \u000aoverflow.
erListOverflow.Description=Several features of the control application use lists. If an element is added to \u000asuch a list, which is already full, this overflow alarm is raised. This problem \u000aneeds to be solved by an application engineer.
erListOverflow.Resolution=Please contact the machine manufacturer.
erAnalogInput.Cause=An analog sensor input signals an invalid \u000ainput value.
erAnalogInput.Description=The status flag of an analog input signals an error state. \u000aThe problem can be at the specific hardware endpoint on the \u000aIO board, or with the hardware or wiring on the endpoint.\u000aWithout a working sensor feedback the according measurement is stopped, \u000aprobably also causing a lock on other movements.
erAnalogInput.Resolution=Check the feedback of the sensor in the IO monitor.\u000aThen check the according hardware including the terminal and its wiring.
erMovementNotAvailable.Cause=A movement should be started which \u000adoesn't exist.
erMovementNotAvailable.Description=According to the knowledge of the registration lists of the control application \u000athe movement that should be started is unknown.
erMovementNotAvailable.Resolution=After confirmation of the alarm further operation is possible.<br><br>\u000aBecause of the application internal character of the alarm cause, \u000aplease contact the machine manufacturer.
erCalibrationNotEnoughValues.Cause=During screw movement at autocalibration for inject and hold PID-identification to less numbers of actual pressure values are measured.
erCalibrationNotEnoughValues.Description=During autocalibration reference pressure profiles with different steps are used to calculate PID-values of the pressure controllers. The step response of the actual pressure is analyzed.<br>Inject-PID: If screw velocity is very high and screw stroke is low to less measure points are recorded.<br>Hold-PID: Reference pressure steps are to short.
erCalibrationNotEnoughValues.Resolution=Please contact the machine manufacturer.
erCalibrationDataFailure.Cause=Calculation of PID-values for pressure controller precutoff and hold can't be calculated.
erCalibrationDataFailure.Description=During autocalibration reference pressure profiles with different steps are used to calculate PID-values of the pressure controllers.<br>The step response of the actual pressure is analyzed. If the actual pressure can't follow the reference the calculation of the PID-values fails.
erCalibrationDataFailure.Resolution=Start calibration of pressure controller for inject or hold again.
erUserLevelLow.Cause=The current user level is too low to \u000aperform the desired operation.
erUserLevelLow.Description=Certain functionalities are only available to higher user levels. If such a \u000afunctionality is used with a lower user level this alarm is raised.
erUserLevelLow.Resolution=Log in with a user level equal or higher than the required level.
erSetupModeRequired.Cause=Certain movements are only possible in \u000aoperation mode 'setup'.
erSetupModeRequired.Description=A number of movements, including all autocalibration movements, require the \u000aoperation mode 'setup' to be active. Otherwise the according movements are \u000anot allowed.
erSetupModeRequired.Resolution=Change to operation mode 'setup' before retrying the desired \u000aoperation.
erSetupModeRequiredForCalib.Cause=Autocalibration feature is only available in operation mode 'setup'.
erSetupModeRequiredForCalib.Description=Any calibration movement requires the operation mode 'setup' to be active. Otherwise the according movements are not allowed.
erSetupModeRequiredForCalib.Resolution=Change to operation mode 'setup' before retrying the desired \u000aoperation.
erSetupModeRequiredForAdjust.Cause=Adjustment movements are only possible in operation mode 'setup'.
erSetupModeRequiredForAdjust.Description=Adjustment functionalities, for example mold height adjustment, require the \u000aoperation mode 'setup' to be active. Otherwise the according movements are \u000anot allowed.
erSetupModeRequiredForAdjust.Resolution=Change to operation mode 'setup' before retrying the desired \u000aoperation.
erTransducerCalibNoMovement.Cause=Too little reaction came from a device \u000aduring transducer calibration.
erTransducerCalibNoMovement.Description=The calibration feature is moving a device for example forward and backward \u000ain order to measure the voltage values corresponding to zero position and \u000afull stroke. If the two voltages are (almost) equal the application can assume \u000ano movement actually happened. It is also possible that the transducer feedback \u000ais corrupt because of wiring, terminal or malfunctioning transducer hardware.
erTransducerCalibNoMovement.Resolution=Check the problematic movement manually in setup mode. Is the \u000adevice moving, but the input voltage does not change, check the \u000awiring, terminal and transducer hardware.<br>\u000aIf the device is not moving try to increase the problematic movements \u000asetup mode output settings and possibly check the according pump calibration by moving other devices in setup mode.
erRPMCalibNoMovement.Cause=Too little RPM reaction for calibration.
erRPMCalibNoMovement.Description=During calibration the application cannot find enough RPM change while \u000atrying to rotate the screw.<br>\u000aMost likely there is a problem with the impulse sensor feedback.
erRPMCalibNoMovement.Resolution=Try a plasticizing movement in operation mode setup to find possible \u000aproblems. Check the {Injection1.di_ImpulseInput} feedback value in the \u000aIO monitor.<br>\u000aIf there is no feedback check the terminal, wiring and possibly the \u000asensor itself before retrying a calibration.
erAssert.Cause=An internal error regarding movement \u000ahandling is active.
erAssert.Description=Serious control application problems regarding movement handling are covered \u000aby this alarm. The detailed cause must be analyzed by an according \u000aapplication engineer.
erAssert.Resolution=Please contact the machine manufacturer.
erPumpPresCalibNoValueChange.Cause=Too little pressure reaction for calibration.
erPumpPresCalibNoValueChange.Description=During calibration the application cannot find any pressure change while \u000agiving an output pressure.<br>\u000aMost likely the reason is a bad linearization table setting for pressure sensor \u000areading. It is also possible that there is a problem at the terminal or the wiring\u000aof the sensor, or even the sensor itself.
erPumpPresCalibNoValueChange.Resolution=Check the IO monitor for pressure output voltage given. Also check \u000athe voltage measured by the pressure sensor.<br>\u000aIf these two are ok, check the linearization table setting of the \u000aaccording pressure sensor.<br>\u000aOtherwise check the pressure sensor itself for problems before\u000a retrying a calibration.
erPumpVelCalibNoValueChange.Cause=Too little velocity reaction for calibration.
erPumpVelCalibNoValueChange.Description=During calibration the application cannot find enough velocity change while \u000atrying to move the selected calibration axis.<br>\u000aMost likely the reason is a bad linearization table setting for the according axis\u000atransducer. There could also be a hardware problem.
erPumpVelCalibNoValueChange.Resolution=Try a movement of the according axis in operation mode setup to find\u000apossible problems.<br>\u000aCheck the IO monitor for velocity output voltage given.<br>\u000aIf this is ok, check the linearization table setting of the \u000aaccording axis transducer.<br>\u000aOtherwise check the hardware for problems before\u000a retrying a calibration.
erCalibrationFailure.Cause=Transducer calibration can't be finished.
erCalibrationFailure.Description=During transducer calibration no movement is possible.
erCalibrationFailure.Resolution=Check output to actuators (all required valves are opened, torque and reference speed to drive).
erCalibrationWarning.Cause=The calculation of the pressure PID-parameters is done successfully. A little change of the values would cause invalid values for the PID-parameters.
erCalibrationWarning.Description=The PID-parameters are calculated from analyzed measure data.<br>The calculation can still be done but if a measured quantity has different values the calculation would not be possible.
erCalibrationWarning.Resolution=Start calibration again.
erCalibrationRPMNotStable.Cause=The measured actual revolution of the screw is not stable during observation time.
erCalibrationRPMNotStable.Description=During RPM-calibration the output to the actuator is increased step-by-step.<br>At each step the actual revolution must be stable after short reaction time.
erCalibrationRPMNotStable.Resolution=Please contact the machine manufacturer.
erCalibrationPressureNotStable.Cause=During calibration of the pump pressure the actual pressure is not stable enough.
erCalibrationPressureNotStable.Description=At pressure calibration the pressure valve is opened using constant control value. As result the actual pressure has to be stable after short reaction time.<br>If the pressure doesn't get stable measurement has to be stopped.
erCalibrationPressureNotStable.Resolution=Please contact the machine manufacturer.
erCalibrationVelocityNotStable.Cause=During calibration of the pump velocity the actual screw velocity is not stable enough.
erCalibrationVelocityNotStable.Description=At velocity calibration the flow valve is opened using constant control value. As result the actual screw velocity has to be stable after short reaction time.<br>If the velocity doesn't get stable measurement has to be stopped.
erCalibrationVelocityNotStable.Resolution=Please contact the machine manufacturer.
erPIDCalcVelocityNotStable.Cause=During calibration of the screw velocity controller the actual screw velocity is not stable enough.
erPIDCalcVelocityNotStable.Description=At velocity calibration the flow valve is opened using constant control value. As result the actual screw velocity has to be stable after short reaction time.
erPIDCalcVelocityNotStable.Resolution=Please contact the machine manufacturer.
erPIDCalcPressureNotStable.Cause=Measured pressure at hold pressure calibration is not stable.
erPIDCalcPressureNotStable.Description=At pressure calibration the pressure valve is opened using constant control value. As result the actual pressure has to be stable after short reaction time.
erPIDCalcPressureNotStable.Resolution=Please contact the machine manufacturer.
erPIDParamDetectionError.Cause=Failure at velocity calibration.
erPIDParamDetectionError.Description=There are some failures during velocity calibration possible:<br>- no constant movement possible<br>- parametrization of filter<br>- parametrization of differentiator
erPIDParamDetectionError.Resolution=Please contact the machine manufacturer.
erCalibrationStopped.Cause=There are alarms pending or one of the \u000acalibration movements is locked, \u000apreventing any autocalibration.
erCalibrationStopped.Description=To allow execution of the autocalibration the number of active alarms must be 0. \u000aAlso autocalibration is only executed if all involved movements are free to \u000aoperate and not locked by any other movement or function. Both cases will \u000aresult in an immediate stop of the calibration with this alarm.
erCalibrationStopped.Resolution=Solve problems for all pending alarms. Make sure the movements \u000ainvolved in the desired calibration are not locked. For this it might \u000abe necessary to move other components into appropriate \u000aendpositions. After this retry the desired calibration.
erCalibrationSpeedStopped.Cause=There are alarms pending or one of the \u000acalibration movements is locked, \u000apreventing any autocalibration.
erCalibrationSpeedStopped.Description=To allow execution of the autocalibration the number of active alarms must be 0. \u000aAlso autocalibration is only executed if all involved movements are free to \u000aoperate and not locked by any other movement or function. Both cases will \u000aresult in an immediate stop of the calibration with this alarm.
erCalibrationSpeedStopped.Resolution=Solve problems for all pending alarms. Make sure the movements \u000ainvolved in the desired calibration are not locked. For this it might \u000abe necessary to move other components into appropriate \u000aendpositions. After this retry the desired calibration.
erCalibrationCycleMissmatch.Cause=Automatic calibration needs to be done in \u000aa specific order, which is not the case.
erCalibrationCycleMissmatch.Description=Basically the autocalibration must be done in a fixed sequence to get correct results. This alarm is displayed if a single calibration is started manually without executing the previous calibration steps. The autocalibration feature shows the required order of this steps.\u000aOnce the complete autocalibration is successfully finished, any \u000apart can be solitary executed. Because all steps which are previous steps for \u000aanother calibration are done.
erCalibrationCycleMissmatch.Resolution=Perform all automatic calibrations down to the desired calibration \u000abefore retrying.<br>\u000aAs an alternative the complete autocalibration can be run \u000abefore retrying.
erCalibrationNotActivated.Cause=The movement which should be started for \u000acalibratin of a transducer is switched off.
erCalibrationNotActivated.Description=It was tried to calibrate a machine device that is deactivated.
erCalibrationNotActivated.Resolution=Activate the device on the according HMI mask.
erVariableNotFound.Cause=The application requires a variable which \u000ais missing.
erVariableNotFound.Description=For various application parts variables are dynamically accessed during runtime. \u000aIf a required variable cannot be accessed this alarm is raised. In this case \u000aapplication software changes are indicated.
erVariableNotFound.Resolution=Please contact the machine manufacturer.
erEndPosChangedWithoutMove.Cause=The endposition state of a device changed \u000awithout starting the movement.
erEndPosChangedWithoutMove.Description=At all times the position and endposition of devices providing such sensor \u000afeedback is monitored. If the position changes without a deliberate command \u000afrom the control application this alarm is raised.\u000aThe underlying reason is most likely a hydraulic/mechanical problem. It is also \u000apossible that the output device (pump or drive) is not calibrated properly, giving \u000aan unintended movement output where the output should be zero.
erEndPosChangedWithoutMove.Resolution=Check the pump (or drive) output. In case the zero-output has a \u000aproblematic offset recalibrate the device.<br><br>\u000aIf all outputs are ok check the according hydraulic valves to locate \u000athe problem before retrying the desired operation.
erVariableNotLinked.Cause=A hardware endpoint system variable \u000aneeds to be configured for the IO board, \u000abut it is not.
erVariableNotLinked.Description=Hardware endpoints are system variables used within the control application. \u000aThese variables also need to appear in the IO configuration to be 'linked'. If \u000asuch a variable is not linked, the application cannot operate properly. In this \u000acase an IO configuration or control application change is indicated.
erVariableNotLinked.Resolution=Please contact the machine manufacturer.
erStartCycleAfterProtectFailed.Cause=Retrying mold close after mold protect \u000afailed.
erStartCycleAfterProtectFailed.Description=If mold protect is triggered and the user setting for {Mold1.sv_bOpenAfterProtect} is set to \u000aTRUE the mold will open after meeting a protect timeout. If the {system.sv_iSetMoldProtect} is set &gt; 0 the application will try to close the mold an according \u000anumber of times. In order to retry the cycle the operation mode will be brought \u000aback to full- or semi-automatic mode, depending on the active mode when \u000amold protect was triggered.<br>\u000aAt this point there could be problematic machine states signaled by alarms, \u000awhich can prevent the operation mode to be switched to semi- or full-automatic. \u000aIn this latter case this alarm will be raised.
erStartCycleAfterProtectFailed.Resolution=Find the cause preventing the operation mode from switching \u000ato semi- or full-automatic mode. Check the endpositions of \u000amold, ejector and possibly cores. Check all active alarms in \u000aorder to find and solve the problems before retrying the desired \u000aoperation.
erMaxMoveDevicesExceeded.Cause=The maximum number of devices that \u000acan be registered within the application \u000ais exceeded.
erMaxMoveDevicesExceeded.Description=The overall number of devices that can register within the control application \u000ais limited. This limit is exceeded by the current application software setup.
erMaxMoveDevicesExceeded.Resolution=Please contact the machine manufacturer.
erTooManyPumpsRegistered.Cause=The maximum number of pumps that \u000acan be registered within the application \u000ais exceeded.
erTooManyPumpsRegistered.Description=The overall number of pumps that can register within the control application \u000ais limited. This limit is exceeded by the current application software setup.
erTooManyPumpsRegistered.Resolution=Please contact the machine manufacturer.
