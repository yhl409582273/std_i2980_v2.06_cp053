IMPORT_OVER_LISTFILE
 cMoveFwd
, cMoveBwd
, cMovePlast
, cCompAutoPurge
, FBManualButton
, FBManualButtonKeep
, tsDeviceId
, tnOperationMode
, FBCheckReady

END_IMPORT

ALGORITHM_BLOCK ABManualButton #DUMMY_EDIT_BLOCK

SYSTEM_VAR
 sv_bInitDone : BOOL;
 sv_DeviceId : tsDeviceId;
 sv_OperationMode : tnOperationMode;
END_VAR

SYSTEM_OBJECT
 PU_Task_7 : TASK;
END_OBJECT

VAR
 fbManualButton : FBManualButton;
 fbManualButtonPlast : FBManualButtonKeep;
 mpbAutoPurgeReady : REFTO BOOL;
END_VAR

ALGORITHM aButtonInject


VAR_INPUT
 bButtonInject : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF mpbAutoPurgeReady <> EMPTY AND NOT mpbAutoPurgeReady^ THEN
    // autopurge available and active -> ignore manual button
    RETURN;
END_IF;

fbManualButton(bButton := bButtonInject, MoveId := cMoveInject, MoveDir :=cMoveFwd);


;#END_EDIT_BLOCK END_ALGORITHM

ALGORITHM aButtonDecomp


VAR_INPUT
 bButtonDecomp : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF mpbAutoPurgeReady <> EMPTY AND NOT mpbAutoPurgeReady^ THEN
    // autopurge available and active -> ignore manual button
    RETURN;
END_IF;

fbManualButton(bButton := bButtonDecomp, MoveId := cMoveDecompAftPlast, MoveDir := cMoveBwd);



;#END_EDIT_BLOCK END_ALGORITHM

ALGORITHM aButtonPlast


VAR_INPUT
 bButtonPlast : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF mpbAutoPurgeReady <> EMPTY AND NOT mpbAutoPurgeReady^ THEN
    // autopurge available and active -> ignore manual button
    RETURN;
END_IF;

IF sv_OperationMode = nManual THEN
   //plast in manual mode should also contain decomp before and decomp after
   //-> send start request for combined plast movement
   fbManualButtonPlast(bButton := bButtonPlast, MoveId := cMoveCombinedPlast, MoveDir := cMoveBwd);
ELSE
   //in setup mode only plast should be executed
   fbManualButtonPlast(bButton := bButtonPlast, MoveId := cMovePlast, MoveDir := cMoveBwd);
END_IF;



;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pInitDone ON PU_Task_7(10) WITH sv_bInitDone


VAR
 fbCheckAutoPurgeReady : FBCheckReady;
 DeviceIdAutoPurge : tsDeviceId;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)


//get reference to ready flag of autopurge movement
DeviceIdAutoPurge.CompId := cCompAutoPurge;
DeviceIdAutoPurge.IndexId := sv_DeviceId.IndexId;

fbCheckAutoPurgeReady(DeviceId := DeviceIdAutoPurge);
mpbAutoPurgeReady := fbCheckAutoPurgeReady.pbReady;



;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 30 @Pou 25 
@@@BEG_Comment@@@

@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
0 
@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
4 
@Var @RT(8)cMoveFwd @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
0 @RT(2)12 @RT(16)movement forward 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(8)cMoveBwd @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
0 @RT(2)11 @RT(17)movement backward 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(10)cMovePlast @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
0 @RT(2)13 @RT(23)plast movement (rotate) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(14)cCompAutoPurge @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
0 @RT(3)126 @RT(19)Component AutoPurge 
@END_Attrib 
1 1 @F @F @F @F 

@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(14)ABManualButton @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
7 
@Var @RT(9)PU_Task_7 @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(14)fbManualButton @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(14)FBManualButton @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(19)fbManualButtonPlast @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(18)FBManualButtonKeep @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(12)sv_bInitDone @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(11)sv_DeviceId @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tsDeviceId @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(16)sv_OperationMode @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(15)tnOperationMode @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(17)mpbAutoPurgeReady @RT(0) @T @T @REFTO 0 @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

4 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(13)aButtonInject @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(13)bButtonInject @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(13)aButtonDecomp @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(13)bButtonDecomp @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(12)aButtonPlast @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(12)bButtonPlast @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(9)pInitDone @STRUCTURED_TEXT 
@RT(0) @RT(12)sv_bInitDone @RT(13)PU_Task_7(10) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
2 
@Var @RT(21)fbCheckAutoPurgeReady @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(12)FBCheckReady @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(17)DeviceIdAutoPurge @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tsDeviceId @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(12)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF mpbAutoPurgeReady <> EMPTY AND NOT mpbAutoPurgeReady^ THEN
    // autopurge available and active -> ignore manual button
    RETURN;
END_IF;

fbManualButton(bButton := bButtonInject, MoveId := cMoveInject, MoveDir :=cMoveFwd);

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(13)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF mpbAutoPurgeReady <> EMPTY AND NOT mpbAutoPurgeReady^ THEN
    // autopurge available and active -> ignore manual button
    RETURN;
END_IF;

fbManualButton(bButton := bButtonDecomp, MoveId := cMoveDecompAftPlast, MoveDir := cMoveBwd);


@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(20)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF mpbAutoPurgeReady <> EMPTY AND NOT mpbAutoPurgeReady^ THEN
    // autopurge available and active -> ignore manual button
    RETURN;
END_IF;

IF sv_OperationMode = nManual THEN
   //plast in manual mode should also contain decomp before and decomp after
   //-> send start request for combined plast movement
   fbManualButtonPlast(bButton := bButtonPlast, MoveId := cMoveCombinedPlast, MoveDir := cMoveBwd);
ELSE
   //in setup mode only plast should be executed
   fbManualButtonPlast(bButton := bButtonPlast, MoveId := cMovePlast, MoveDir := cMoveBwd);
END_IF;


@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(14)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)


//get reference to ready flag of autopurge movement
DeviceIdAutoPurge.CompId := cCompAutoPurge;
DeviceIdAutoPurge.IndexId := sv_DeviceId.IndexId;

fbCheckAutoPurgeReady(DeviceId := DeviceIdAutoPurge);
mpbAutoPurgeReady := fbCheckAutoPurgeReady.pbReady;


@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 
@END_Body 

@END_Contents 
