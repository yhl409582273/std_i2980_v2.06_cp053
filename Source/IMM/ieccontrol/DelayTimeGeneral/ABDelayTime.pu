(*
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

Algorithm block for delay time - function
*)

IMPORT_OVER_LISTFILE
 SET_EVENT
, GET_RUNTIME
, tsMoveData
, tsDeviceId
, tevStart
, tevStop
, tevStartedStopped
, tevStartedStoppedData
, tyInstanceListArrayDuration
, tyInterCondTimeArray
, tyDelayTimeData
, tyInterCondBoolArray
, ABMovementRegister
, tevStartData
, FBSetMovementState
, tevStopData

END_IMPORT

ALGORITHM_BLOCK ABDelayTime #DUMMY_EDIT_BLOCK

SYSTEM_VAR
 sv_bInitStart : BOOL;
 sv_MoveDelay : tsMoveData;
 sv_DeviceId : tsDeviceId;
 sv_bDeviceReady : BOOL;
 sv_SetDelayTimes : tyInstanceListArrayDuration (* array with set delay times *);
 sv_ActDelayTimes : tyInterCondTimeArray;
 sv_iEditorPropertiesChanged : DINT (* must be increased if properties, that are relevant for ODC editor, changed *);
 sv_TimeReachedArray : tyInterCondBoolArray;
END_VAR

SYSTEM_OBJECT
 PU_Task_7 : TASK;
 EV_Task_3 : TASK;
 evStart : tevStart;
 evStop : tevStop;
 evStartedStopped : tevStartedStopped;
 TaskAnalog : TASK;
 PU_Task_13 : TASK;
END_OBJECT

VAR
 evStartedStoppedData : tevStartedStoppedData;
 mDelayTimeData : tyDelayTimeData;
 miActiveDelayTimes : DINT;
 mbStop : BOOL;
 mevStart : tevStart;
 mevStop : tevStop;
END_VAR

POSTUPDATE_ALGORITHM pMovementRegister ON PU_Task_7 WITH sv_bInitStart


VAR
 abMovementRegister : ABMovementRegister;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

// movement registration
sv_MoveDelay.sIconPath := CONCAT(GET_MY_FU_NAME(),"\hmi\images\movDelayTime.gif");

abMovementRegister.aRegister(@sv_MoveDelay);


;#END_EDIT_BLOCK END_ALGORITHM

EVENT_ALGORITHM evaStart ON EV_Task_3 WITH mevStart


VAR_INPUT
 evStartData : tevStartData;
END_VAR

VAR
 fbSetMovementState : FBSetMovementState;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF evStartData.DeviceId = sv_DeviceId THEN
   
   mbStop := FALSE;
   sv_TimeReachedArray[evStartData.IntermediateCond] := FALSE;  
   mDelayTimeData[evStartData.IntermediateCond].bActive := TRUE;
   mDelayTimeData[evStartData.IntermediateCond].dStartTime := GET_RUNTIME();
   miActiveDelayTimes := miActiveDelayTimes + 1;
  
   sv_bDeviceReady := FALSE;
 
   // send started-Message
   evStartedStoppedData.DeviceId := sv_DeviceId;
   evStartedStoppedData.MoveId := sv_MoveDelay.MoveId;
   evStartedStoppedData.MoveDir := sv_MoveDelay.MoveDir;
   evStartedStoppedData.iInstance := evStartData.IntermediateCond;
   evStartedStoppedData.State := nStarted;
   SET_EVENT(evStartedStopped,evStartedStoppedData);
   
   fbSetMovementState(MoveId   := sv_MoveDelay.MoveId,
                     MoveDir  := sv_MoveDelay.MoveDir,
                     State    := nActive);
   
   START_PROCESS_ALGORITHM(paRun);
END_IF;


;#END_EDIT_BLOCK END_ALGORITHM

EVENT_ALGORITHM evaStop ON EV_Task_3 WITH mevStop


VAR_INPUT
 evStopData : tevStopData;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF evStopData.DeviceId = sv_DeviceId THEN
   mbStop := TRUE;    
END_IF;


;#END_EDIT_BLOCK END_ALGORITHM

PROCESS_ALGORITHM paRun ON TaskAnalog(5000)


VAR_TEMP
 iInstance : DINT;
END_VAR

VAR
 fbSetMovementState : FBSetMovementState;
 dActTime : TIME;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

FOR iInstance := 1 TO cMaxIntermediateConditions DO
   IF mDelayTimeData[iInstance].bActive THEN
      
      dActTime := GET_RUNTIME();                                   
      sv_ActDelayTimes[iInstance] := SUB_TIME(dActTime, mDelayTimeData[iInstance].dStartTime);      
      sv_TimeReachedArray[iInstance] := (sv_ActDelayTimes[iInstance] >= sv_SetDelayTimes[iInstance].dDelay);
      
      IF sv_TimeReachedArray[iInstance] OR mbStop THEN
         //delay time reached or movement stopped
         fbSetMovementState(MoveId   := sv_MoveDelay.MoveId,
                     MoveDir  := sv_MoveDelay.MoveDir,
                     State    := nInactive);
   
         // send stopped-Message
         evStartedStoppedData.DeviceId := sv_DeviceId;
         evStartedStoppedData.MoveId := sv_MoveDelay.MoveId;
         evStartedStoppedData.MoveDir := sv_MoveDelay.MoveDir;
         evStartedStoppedData.iInstance := iInstance;
         evStartedStoppedData.State := nStopped;
         SET_EVENT(evStartedStopped,evStartedStoppedData);
         
         mDelayTimeData[iInstance].bActive := FALSE;
         miActiveDelayTimes := miActiveDelayTimes - 1;
      END_IF;
   END_IF;
END_FOR;


IF miActiveDelayTimes = 0 THEN
   sv_bDeviceReady := TRUE;
   STOP_PROCESS_ALGORITHM();
END_IF;





;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pUpdateProperties ON PU_Task_13 WITH sv_SetDelayTimes

#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

sv_iEditorPropertiesChanged := sv_iEditorPropertiesChanged + 1;



;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pProgrammedInSequence ON PU_Task_7 WITH sv_MoveDelay.bProgrammedInSequence

#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF sv_MoveDelay.bProgrammedInSequence THEN
   mevStart := evStart;
   mevStop := evStop;
ELSE
   mevStart := EMPTY;
   mevStop := EMPTY;
END_IF;


;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 68 @Pou 25 
@@@BEG_Comment@@@
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

Algorithm block for delay time - function
@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
2 
@Var @RT(9)SET_EVENT @RT(0) @T @T @DERIVED 0 @F @RT(23)KEBA_STANDARD_PROCEDURE @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(11)GET_RUNTIME @RT(0) @T @T @DERIVED 0 @F @RT(22)KEBA_STANDARD_FUNCTION @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(11)ABDelayTime @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
21 
@Var @RT(13)sv_bInitStart @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(12)sv_MoveDelay @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tsMoveData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(11)sv_DeviceId @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tsDeviceId @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(15)sv_bDeviceReady @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(9)PU_Task_7 @RT(0) @T @F @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(9)EV_Task_3 @RT(0) @T @F @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(7)evStart @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(8)tevStart @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(6)evStop @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(7)tevStop @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(16)evStartedStopped @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(17)tevStartedStopped @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(20)evStartedStoppedData @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(21)tevStartedStoppedData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(10)TaskAnalog @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(16)sv_SetDelayTimes @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(27)tyInstanceListArrayDuration @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(26)array with set delay times @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(16)sv_ActDelayTimes @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(20)tyInterCondTimeArray @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(10)PU_Task_13 @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(27)sv_iEditorPropertiesChanged @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(74)must be increased if properties, that are relevant for ODC editor, changed @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(14)mDelayTimeData @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(15)tyDelayTimeData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(18)miActiveDelayTimes @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(6)mbStop @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(19)sv_TimeReachedArray @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(20)tyInterCondBoolArray @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(8)mevStart @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(8)tevStart @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(7)mevStop @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(7)tevStop @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

6 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(17)pMovementRegister @STRUCTURED_TEXT 
@RT(0) @RT(13)sv_bInitStart @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(18)abMovementRegister @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(18)ABMovementRegister @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@EVENT_ALGORITHM @RT(8)evaStart @STRUCTURED_TEXT 
@RT(0) @RT(8)mevStart @RT(9)EV_Task_3 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
2 
@Var @RT(11)evStartData @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(12)tevStartData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(18)fbSetMovementState @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(18)FBSetMovementState @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@EVENT_ALGORITHM @RT(7)evaStop @STRUCTURED_TEXT 
@RT(0) @RT(7)mevStop @RT(9)EV_Task_3 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(10)evStopData @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(11)tevStopData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@PROCESS_ALGORITHM @RT(5)paRun @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(16)TaskAnalog(5000) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
3 
@Var @RT(18)fbSetMovementState @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(18)FBSetMovementState @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(9)iInstance @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 4 @F @F @F @F 

@Var @RT(8)dActTime @RT(0) @T @F @DT @RT(4)TIME @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(17)pUpdateProperties @STRUCTURED_TEXT 
@RT(0) @RT(16)sv_SetDelayTimes @RT(10)PU_Task_13 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(21)pProgrammedInSequence @STRUCTURED_TEXT 
@RT(0) @RT(34)sv_MoveDelay.bProgrammedInSequence @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Body 
@TL(10)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

// movement registration
sv_MoveDelay.sIconPath := CONCAT(GET_MY_FU_NAME(),"\hmi\images\movDelayTime.gif");

abMovementRegister.aRegister(@sv_MoveDelay);

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(30)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF evStartData.DeviceId = sv_DeviceId THEN
   
   mbStop := FALSE;
   sv_TimeReachedArray[evStartData.IntermediateCond] := FALSE;  
   mDelayTimeData[evStartData.IntermediateCond].bActive := TRUE;
   mDelayTimeData[evStartData.IntermediateCond].dStartTime := GET_RUNTIME();
   miActiveDelayTimes := miActiveDelayTimes + 1;
  
   sv_bDeviceReady := FALSE;
 
   // send started-Message
   evStartedStoppedData.DeviceId := sv_DeviceId;
   evStartedStoppedData.MoveId := sv_MoveDelay.MoveId;
   evStartedStoppedData.MoveDir := sv_MoveDelay.MoveDir;
   evStartedStoppedData.iInstance := evStartData.IntermediateCond;
   evStartedStoppedData.State := nStarted;
   SET_EVENT(evStartedStopped,evStartedStoppedData);
   
   fbSetMovementState(MoveId   := sv_MoveDelay.MoveId,
                     MoveDir  := sv_MoveDelay.MoveDir,
                     State    := nActive);
   
   START_PROCESS_ALGORITHM(paRun);
END_IF;

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(9)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF evStopData.DeviceId = sv_DeviceId THEN
   mbStop := TRUE;    
END_IF;

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(41)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

FOR iInstance := 1 TO cMaxIntermediateConditions DO
   IF mDelayTimeData[iInstance].bActive THEN
      
      dActTime := GET_RUNTIME();                                   
      sv_ActDelayTimes[iInstance] := SUB_TIME(dActTime, mDelayTimeData[iInstance].dStartTime);      
      sv_TimeReachedArray[iInstance] := (sv_ActDelayTimes[iInstance] >= sv_SetDelayTimes[iInstance].dDelay);
      
      IF sv_TimeReachedArray[iInstance] OR mbStop THEN
         //delay time reached or movement stopped
         fbSetMovementState(MoveId   := sv_MoveDelay.MoveId,
                     MoveDir  := sv_MoveDelay.MoveDir,
                     State    := nInactive);
   
         // send stopped-Message
         evStartedStoppedData.DeviceId := sv_DeviceId;
         evStartedStoppedData.MoveId := sv_MoveDelay.MoveId;
         evStartedStoppedData.MoveDir := sv_MoveDelay.MoveDir;
         evStartedStoppedData.iInstance := iInstance;
         evStartedStoppedData.State := nStopped;
         SET_EVENT(evStartedStopped,evStartedStoppedData);
         
         mDelayTimeData[iInstance].bActive := FALSE;
         miActiveDelayTimes := miActiveDelayTimes - 1;
      END_IF;
   END_IF;
END_FOR;


IF miActiveDelayTimes = 0 THEN
   sv_bDeviceReady := TRUE;
   STOP_PROCESS_ALGORITHM();
END_IF;




@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(8)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

sv_iEditorPropertiesChanged := sv_iEditorPropertiesChanged + 1;


@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(13)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF sv_MoveDelay.bProgrammedInSequence THEN
   mevStart := evStart;
   mevStop := evStop;
ELSE
   mevStart := EMPTY;
   mevStop := EMPTY;
END_IF;

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 
@END_Body 

@END_Contents 
