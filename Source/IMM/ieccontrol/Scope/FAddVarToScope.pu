(*
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".


*)

IMPORT_OVER_LISTFILE
 tnSVDataTypes
, tsSV
//  tsScopeVar
, KSWO_Status

END_IMPORT

FUNCTION FAddVarToScope : BOOL #DUMMY_EDIT_BLOCK

VAR_INPUT
 Name : STRING(255);
 Task : TASK;
 SysVarType : tnSVDataTypes;
END_VAR

VAR_IN_OUT
 SysVar : tsSV;
 // scopeVar : tsScopeVar;
END_VAR

VAR
 swoState : KSWO_Status;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

CASE SysVarType OF
   nDT_BOOL  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.pbBOOLSV^);
   nDT_BYTE  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piBYTESV^);
   nDT_WORD  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piWORDSV^);
   nDT_DWORD : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piDWORDSV^);
   nDT_LWORD : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piLWORDSV^);
   nDT_INT   : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piINTSV^);
   nDT_UINT  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piUINTSV^);
   nDT_DINT  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piDINTSV^);               
   nDT_UDINT : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piUDINTSV^);
   nDT_SINT  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piSINTSV^);
   nDT_USINT : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piUSINTSV^);                  
   nDT_LINT  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piLINTSV^);
   nDT_ULINT : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piULINTSV^);
   nDT_REAL  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.prREALSV^);   
   nDT_LREAL : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.prLREALSV^);
   nDT_TIME  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.pdTIMESV^);
ELSE
   FAddVarToScope := FALSE;
   RETURN;
END_CASE;

FAddVarToScope := (swoState <> KSWO_Status_OK);




;#END_EDIT_BLOCK END_FUNCTION



#END_OF_IEC_PART

@Puma @IecEditor 6 150 @Pou 25 
@@@BEG_Comment@@@
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".


@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
0 
@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@FUNCTION @RT(14)FAddVarToScope @STRUCTURED_TEXT 
@RT(4)BOOL @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
6 
@Var @RT(4)Name @RT(0) @T @F @DT @RT(11)STRING(255) @RT(0) @T @T @STRING 0 @F @RT(3)255 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(4)Task @RT(0) @T @F @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(10)SysVarType @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(13)tnSVDataTypes @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(6)SysVar @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(4)tsSV @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 2 @F @F @F @F 

@Var @RT(8)scopeVar @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tsScopeVar @RT(0) @T @T @UNKNOWN 0 @F 
@F @T 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 2 @F @F @F @F 

@Var @RT(8)swoState @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(11)KSWO_Status @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(31)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

CASE SysVarType OF
   nDT_BOOL  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.pbBOOLSV^);
   nDT_BYTE  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piBYTESV^);
   nDT_WORD  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piWORDSV^);
   nDT_DWORD : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piDWORDSV^);
   nDT_LWORD : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piLWORDSV^);
   nDT_INT   : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piINTSV^);
   nDT_UINT  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piUINTSV^);
   nDT_DINT  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piDINTSV^);               
   nDT_UDINT : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piUDINTSV^);
   nDT_SINT  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piSINTSV^);
   nDT_USINT : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piUSINTSV^);                  
   nDT_LINT  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piLINTSV^);
   nDT_ULINT : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.piULINTSV^);
   nDT_REAL  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.prREALSV^);   
   nDT_LREAL : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.prLREALSV^);
   nDT_TIME  : swoState := KSWO_AddVariable(Task := Task, Name := Name, Variable := SysVar.pdTIMESV^);
ELSE
   FAddVarToScope := FALSE;
   RETURN;
END_CASE;

FAddVarToScope := (swoState <> KSWO_Status_OK);



@END_Body 

@END_Contents 
