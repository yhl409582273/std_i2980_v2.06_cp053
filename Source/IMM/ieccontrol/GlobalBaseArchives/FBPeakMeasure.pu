(*
Function Block for detecting a minimum/maximum peakvalue of an analog signal.

A rising edge on the bTrigger input starts the measurement.
During measurement the rPeakVal output is always updated with the latest peakvalue.
To reset the FB it must be called with bStop=TRUE. Then rPeakVal is set to zero and the FB is ready for a new peakvalue measurement.
bMinMax selects if the maximum or minimum peakvalue should be detected. (FALSE...max, TRUE...min)
*)

FUNCTION_BLOCK FBPeakMeasure #DUMMY_EDIT_BLOCK

VAR_INPUT
 rActVal : REAL (* Actual value input for peak measurement *);
 bTrigger : BOOL (* Boolean trigger input *);
 bReset : BOOL;
 bMinMax : BOOL (* Minimum/Maximum peak value (FALSE: max, TRUE: min) *);
END_VAR

VAR_OUTPUT
 rPeakVal : REAL (* Peak value output *);
END_VAR

VAR
 bTriggered : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK
IF NOT bReset THEN
   
   IF bTrigger OR bTriggered THEN   
      bTriggered := TRUE;
      
      IF (NOT bMinMax AND (rActVal > rPeakVal)) OR (bMinMax AND (rActVal < rPeakVal)) THEN   
          rPeakVal := rActVal;
      END_IF;
   END_IF;
ELSE
   //not OK for MIN
   //rPeakVal := 0.0;
   rPeakVal := rActVal;
   bTriggered := FALSE;
END_IF;


;#END_EDIT_BLOCK END_FUNCTION_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 80 @Pou 25 
@@@BEG_Comment@@@
Function Block for detecting a minimum/maximum peakvalue of an analog signal.

A rising edge on the bTrigger input starts the measurement.
During measurement the rPeakVal output is always updated with the latest peakvalue.
To reset the FB it must be called with bStop=TRUE. Then rPeakVal is set to zero and the FB is ready for a new peakvalue measurement.
bMinMax selects if the maximum or minimum peakvalue should be detected. (FALSE...max, TRUE...min)
@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
0 
@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@FUNCTION_BLOCK @RT(13)FBPeakMeasure @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
6 
@Var @RT(7)rActVal @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(39)Actual value input for peak measurement @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(8)bTrigger @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(21)Boolean trigger input @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(6)bReset @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(7)bMinMax @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(50)Minimum/Maximum peak value (FALSE: max, TRUE: min) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(8)rPeakVal @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(17)Peak value output @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(10)bTriggered @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(16)
IF NOT bReset THEN
   
   IF bTrigger OR bTriggered THEN   
      bTriggered := TRUE;
      
      IF (NOT bMinMax AND (rActVal > rPeakVal)) OR (bMinMax AND (rActVal < rPeakVal)) THEN   
          rPeakVal := rActVal;
      END_IF;
   END_IF;
ELSE
   //not OK for MIN
   //rPeakVal := 0.0;
   rPeakVal := rActVal;
   bTriggered := FALSE;
END_IF;

@END_Body 

@END_Contents 
