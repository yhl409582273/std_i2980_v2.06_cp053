(*
start a movement for X seconds
after that time the movement is stopped again
*)

IMPORT_OVER_LISTFILE
 tevStop
, tevStartRequest
, tsDeviceId
, tMoveIdent
, tevStartRequestData
, tevStopData
, TON

END_IMPORT

ALGORITHM_BLOCK ABMoveTimeLimited #DUMMY_EDIT_BLOCK

SYSTEM_OBJECT
 PU_Task_7 : TASK;
 evStop : tevStop;
 evStartRequest : tevStartRequest;
END_OBJECT

VAR
 mbMovementStopped : BOOL (* stop of movement was triggerd before  time elapsed *);
 mDeviceId : tsDeviceId;
 mbRunning : BOOL;
END_VAR

ALGORITHM aMove


VAR_INPUT
 dTime : TIME;
 DeviceId : tsDeviceId;
 MoveDir : tMoveIdent;
 MoveId : tMoveIdent;
END_VAR

VAR_OUTPUT
 bTimeReached : BOOL (* was stopped by time limit *);
 bDone : BOOL (* movement is stopped again *);
END_VAR

VAR
 evStartRequestData : tevStartRequestData;
 evStopData : tevStopData;
 fbTimer : TON;
END_VAR

(* IecGraph-Code *)

(* init step *)
INITIAL_STEP Step1:
aStart (P);
aRunTimer (N);
END_STEP


(* steps *)
STEP Step5:
aStop (N);
END_STEP

STEP Step6:
END_STEP

STEP Step3:
Action2 (N);
END_STEP

ACTION Action2: #BEGIN_EDIT_BLOCK
bDone := TRUE;
mbRunning := FALSE;

;#END_EDIT_BLOCK END_ACTION (*Action2*)

(* transitions *)
TRANSITION Trans1 FROM Step1 TO Step5 :=  #BEGIN_EDIT_BLOCK
fbTimer.Q
;#END_EDIT_BLOCK
END_TRANSITION

GO_ON_TRANSITION Trans5 FROM Step5 TO Step3 :=  #BEGIN_EDIT_BLOCK
TRUE
;#END_EDIT_BLOCK
END_TRANSITION

TRANSITION Trans3 FROM Step1 TO Step6 :=  #BEGIN_EDIT_BLOCK
mbMovementStopped
;#END_EDIT_BLOCK
END_TRANSITION

GO_ON_TRANSITION Trans6 FROM Step6 TO Step3 :=  #BEGIN_EDIT_BLOCK
TRUE
;#END_EDIT_BLOCK
END_TRANSITION

TRANSITION Trans7 FROM Step3 TO Step1 :=  #BEGIN_EDIT_BLOCK
TRUE
;#END_EDIT_BLOCK
END_TRANSITION

(* end IecGraph-Code *)
(* sfc-code *)

(* stand alone actions *)
ACTION aStop: #BEGIN_EDIT_BLOCK

evStopData.DeviceId := DeviceId;
SET_EVENT(evStop, evStopData);


bTimeReached := TRUE;

;#END_EDIT_BLOCK END_ACTION (*aStop*)
ACTION aRunTimer: #BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

fbTimer();

;#END_EDIT_BLOCK END_ACTION (*aRunTimer*)
ACTION aStart: #BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
fbTimer(IN := FALSE);
fbTimer(IN := TRUE, PT := dTime);

mbMovementStopped := FALSE;
bTimeReached := FALSE;
bDone := FALSE;

//save for later use
mDeviceId := DeviceId;
mbRunning := TRUE;

evStartRequestData.DeviceId := DeviceId;
evStartRequestData.MoveDir := MoveDir;
evStartRequestData.MoveId := MoveId;
SET_EVENT(evStartRequest, evStartRequestData);


;#END_EDIT_BLOCK END_ACTION (*aStart*)
(* end sfc-code *)


END_ALGORITHM

EVENT_ALGORITHM evStopAlgo ON PU_Task_7 WITH evStop


VAR_INPUT
 evStopData : tevStopData;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF evStopData.DeviceId = mDeviceId AND mbRunning THEN
   mbMovementStopped := TRUE;
END_IF;



;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 30 @Pou 25 
@@@BEG_Comment@@@
start a movement for X seconds
after that time the movement is stopped again
@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
0 
@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(17)ABMoveTimeLimited @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
6 
@Var @RT(9)PU_Task_7 @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(17)mbMovementStopped @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(50)stop of movement was triggerd before  time elapsed @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(6)evStop @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(7)tevStop @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(14)evStartRequest @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(15)tevStartRequest @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(9)mDeviceId @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tsDeviceId @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(9)mbRunning @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

2 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(5)aMove @SEQUENTIAL_FLOW_CHART 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
9 
@Var @RT(5)dTime @RT(0) @T @F @DT @RT(4)TIME @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(8)DeviceId @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tsDeviceId @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(7)MoveDir @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tMoveIdent @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(6)MoveId @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tMoveIdent @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(12)bTimeReached @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(25)was stopped by time limit @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(5)bDone @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(25)movement is stopped again @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(18)evStartRequestData @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(19)tevStartRequestData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(10)evStopData @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(11)tevStopData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(7)fbTimer @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(3)TON @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@EVENT_ALGORITHM @RT(10)evStopAlgo @STRUCTURED_TEXT 
@RT(0) @RT(6)evStop @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(10)evStopData @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(11)tevStopData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_SfcBody 
3 2 2 

@BEG_SfcData 2 
@StepSeq @RT(4)sseq @F 1 
@Loop @RT(4)loop @F 2 
@StepSeq @RT(3)seq @F 3 
@Step @RT(5)Step1 @F @T @F @F @RT(0) @F 
@AcbCont @RT(7)unnamed @F 2 
@Acb @RT(6)aStart @F @F @RT(1)P @RT(0) @F @F @T @F 
@Acb @RT(9)aRunTimer @F @F @RT(1)N @RT(0) @F @F @T @F 

@AltBranch @RT(3)alt @F 2 
@TransSeq @RT(4)tseq @F 3 
@Trans @RT(6)Trans1 @F @T @F @F @T @T @TL(2)
fbTimer.Q

@RT(6)Trans1 @F 
@Step @RT(5)Step5 @F @F @F @F @RT(0) @F 
@AcbCont @RT(7)unnamed @F 1 
@Acb @RT(5)aStop @F @F @RT(1)N @RT(0) @F @F @T @F 

@Trans @RT(6)Trans5 @F @T @F @F @T @F @TL(2)
TRUE

@RT(6)Trans5 @F 

@TransSeq @RT(4)tseq @F 3 
@Trans @RT(6)Trans3 @F @T @F @F @T @T @TL(2)
mbMovementStopped

@RT(6)Trans3 @F 
@Step @RT(5)Step6 @F @F @F @F @RT(0) @F 
@AcbCont @RT(7)unnamed @F 0 

@Trans @RT(6)Trans6 @F @T @F @F @T @F @TL(2)
TRUE

@RT(6)Trans6 @F 


@Step @RT(5)Step3 @F @F @F @F @RT(0) @F 
@AcbCont @RT(7)unnamed @F 1 
@Acb @RT(7)Action2 @F @T @RT(1)N @RT(0) @F @F @T @TL(3)
bDone := TRUE;
mbRunning := FALSE;

@F 


@Trans @RT(6)Trans7 @F @T @T @T @T @T @TL(2)
TRUE

@RT(6)Trans7 @F 

@END_SfcData 
@SaActions 3 
@SaText @RT(5)aStop 1 @TL(7)

evStopData.DeviceId := DeviceId;
SET_EVENT(evStop, evStopData);


bTimeReached := TRUE;


@SaText @RT(9)aRunTimer 1 @TL(7)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

fbTimer();


@SaText @RT(6)aStart 1 @TL(21)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
fbTimer(IN := FALSE);
fbTimer(IN := TRUE, PT := dTime);

mbMovementStopped := FALSE;
bTimeReached := FALSE;
bDone := FALSE;

//save for later use
mDeviceId := DeviceId;
mbRunning := TRUE;

evStartRequestData.DeviceId := DeviceId;
evStartRequestData.MoveDir := MoveDir;
evStartRequestData.MoveId := MoveId;
SET_EVENT(evStartRequest, evStartRequestData);



@SaTrans 0 
@SaExits 0 
@END_SfcBody 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(10)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF evStopData.DeviceId = mDeviceId AND mbRunning THEN
   mbMovementStopped := TRUE;
END_IF;


@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 
@END_Body 

@END_Contents 
