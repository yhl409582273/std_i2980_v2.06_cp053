IMPORT_OVER_LISTFILE
 STOP_PROCESS_ALGORITHM
, tsResourceLock
, TON

END_IMPORT

ALGORITHM_BLOCK ABResourceLockManager #DUMMY_EDIT_BLOCK

SYSTEM_OBJECT
 PU_Task_7 : TASK;
 TaskSlow : TASK;
END_OBJECT

VAR
 mpResource : REFTO tsResourceLock;
 fbTimeout : TON;
 mbTimeoutUsed : BOOL;
 mName : STRING(31);
END_VAR

ALGORITHM aRequest

#BEGIN_EDIT_BLOCK

IF (mpResource^.iRequest <> 0) THEN // lock request 
    IF (mpResource^.iLocked MOD 2 = 0) THEN  // is unlocked 
        mpResource^.iResponse := mpResource^.iRequest;
        mpResource^.iLocked := mpResource^.iLocked + 1;  // do lock
        IF (mbTimeoutUsed) THEN
            fbTimeout(IN := FALSE);
            START_PROCESS_ALGORITHM(paTimeout);
        END_IF;
    END_IF;
END_IF;


;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pRequest ON PU_Task_7(1) WITH mpResource^.iRequest

#BEGIN_EDIT_BLOCK
aRequest();


;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pRelease ON PU_Task_7(2) WITH mpResource^.iResponse

#BEGIN_EDIT_BLOCK
IF (mpResource^.iResponse = 0) THEN
    IF ((mpResource^.iLocked MOD 2 = 1)) THEN // locked
        mpResource^.iLocked := mpResource^.iLocked + 1; // unlock    
        mpResource^.iRequest := 0; 
        IF (mbTimeoutUsed) THEN        
            STOP_PROCESS_ALGORITHM(paTimeout);
        END_IF;
    END_IF;
END_IF;


;#END_EDIT_BLOCK END_ALGORITHM

ALGORITHM aInit


VAR_INPUT
 sName : STRING(31);
 pResource : REFTO tsResourceLock;
 dTimeout : TIME;
END_VAR
#BEGIN_EDIT_BLOCK
mpResource := pResource; 
mbTimeoutUsed := dTimeout > T#0s;
fbTimeout.PT := dTimeout;
mName := sName;
aRequest();


;#END_EDIT_BLOCK END_ALGORITHM

PROCESS_ALGORITHM paTimeout ON TaskSlow


VAR
 dummy : DINT;
END_VAR
#BEGIN_EDIT_BLOCK
fbTimeout(IN := (mpResource^.iLocked MOD 2 = 1)); 
IF (fbTimeout.Q) THEN
    dummy := Print("ABResourceLockManager(%s): lock timeout for lockid 0x%08x", mName, mpResource^.iResponse);
    mpResource^.iResponse := 0; 
END_IF;


;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 159 @Pou 25 
@@@BEG_Comment@@@

@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
1 
@Var @RT(22)STOP_PROCESS_ALGORITHM @RT(0) @T @T @DERIVED 0 @F @RT(23)KEBA_STANDARD_PROCEDURE @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(21)ABResourceLockManager @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
6 
@Var @RT(9)PU_Task_7 @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(10)mpResource @RT(0) @T @T @REFTO 0 @F @DERIVED 0 @T @T @DT @RT(14)tsResourceLock @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(8)TaskSlow @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(9)fbTimeout @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(3)TON @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(13)mbTimeoutUsed @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(5)mName @RT(0) @T @F @DT @RT(10)STRING(31) @RT(0) @T @T @STRING 0 @F @RT(2)31 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

5 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(8)aRequest @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(8)pRequest @STRUCTURED_TEXT 
@RT(0) @RT(20)mpResource^.iRequest @RT(12)PU_Task_7(1) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(8)pRelease @STRUCTURED_TEXT 
@RT(0) @RT(21)mpResource^.iResponse @RT(12)PU_Task_7(2) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(5)aInit @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
3 
@Var @RT(5)sName @RT(0) @T @F @DT @RT(10)STRING(31) @RT(0) @T @T @STRING 0 @F @RT(2)31 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(9)pResource @RT(0) @T @T @REFTO 0 @F @DERIVED 0 @T @T @DT @RT(14)tsResourceLock @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(8)dTimeout @RT(0) @T @F @DT @RT(4)TIME @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@PROCESS_ALGORITHM @RT(9)paTimeout @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(8)TaskSlow @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(5)dummy @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(12)

IF (mpResource^.iRequest <> 0) THEN // lock request 
    IF (mpResource^.iLocked MOD 2 = 0) THEN  // is unlocked 
        mpResource^.iResponse := mpResource^.iRequest;
        mpResource^.iLocked := mpResource^.iLocked + 1;  // do lock
        IF (mbTimeoutUsed) THEN
            fbTimeout(IN := FALSE);
            START_PROCESS_ALGORITHM(paTimeout);
        END_IF;
    END_IF;
END_IF;

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(2)
aRequest();

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(10)
IF (mpResource^.iResponse = 0) THEN
    IF ((mpResource^.iLocked MOD 2 = 1)) THEN // locked
        mpResource^.iLocked := mpResource^.iLocked + 1; // unlock    
        mpResource^.iRequest := 0; 
        IF (mbTimeoutUsed) THEN        
            STOP_PROCESS_ALGORITHM(paTimeout);
        END_IF;
    END_IF;
END_IF;

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(6)
mpResource := pResource; 
mbTimeoutUsed := dTimeout > T#0s;
fbTimeout.PT := dTimeout;
mName := sName;
aRequest();

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(6)
fbTimeout(IN := (mpResource^.iLocked MOD 2 = 1)); 
IF (fbTimeout.Q) THEN
    dummy := Print("ABResourceLockManager(%s): lock timeout for lockid 0x%08x", mName, mpResource^.iResponse);
    mpResource^.iResponse := 0; 
END_IF;

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 
@END_Body 

@END_Contents 
