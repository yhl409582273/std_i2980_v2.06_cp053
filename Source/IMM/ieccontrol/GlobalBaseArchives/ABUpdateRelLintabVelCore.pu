IMPORT_OVER_LISTFILE
 KAPPL_LintabData

END_IMPORT

ALGORITHM_BLOCK ABUpdateRelLintabVelCore #DUMMY_EDIT_BLOCK

SYSTEM_VAR
 sv_bCalcMaxValuesFromCylData : BOOL (* TRUE: calculate max speed and max pressure values by using cylinder data;  FALSE: max values must be entered manually *);
END_VAR

SYSTEM_OBJECT
 PU_Task_7 : TASK;
END_OBJECT

VAR
 mpLintabOut : REFTO KAPPL_LintabData (* OUT: velocity lintab of movement *);
 mprAbsFlow : REFTO REAL (* IN: maximum absolute flow in l/min *);
 mprMaxSpeed : REFTO REAL (* IN/OUT: max speed of fwd movement *);
 mbInitDone : BOOL;
END_VAR

ALGORITHM aUpdateLintabOut

#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

// save data to Vel lintab
mpLintabOut^.LintabPoints.uNoOfPoints := 2;
mpLintabOut^.LintabPoints.Point[1].rX := 0.0;
mpLintabOut^.LintabPoints.Point[1].rY := 0.0;
mpLintabOut^.LintabPoints.Point[2].rX := mprMaxSpeed^;
mpLintabOut^.LintabPoints.Point[2].rY := 100.0; // %


;#END_EDIT_BLOCK END_ALGORITHM

ALGORITHM aCalcMaxSpeed

#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF NOT sv_bCalcMaxValuesFromCylData THEN
   // no calculation necessary
   RETURN;
END_IF;

// max flow in l/min            
mprMaxSpeed^ := mprAbsFlow^;


;#END_EDIT_BLOCK END_ALGORITHM

ALGORITHM aInit


VAR_INPUT
 pLintabOut : REFTO KAPPL_LintabData;
 prMaxSpeed : REFTO REAL;
 prAbsFlow : REFTO REAL (* absolute flow in l/min *);
END_VAR

VAR
 tmp : DINT;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

mbInitDone := FALSE;
mprAbsFlow := prAbsFlow;
mpLintabOut := pLintabOut;
mprMaxSpeed := prMaxSpeed;

IF NOT CHECK_REF(prAbsFlow^) THEN
    tmp := Print('prAbsFlow not valid');
    RETURN;
END_IF;

IF (NOT CHECK_REF(pLintabOut^)) THEN
    tmp := Print('pLintabOut not valid');
    RETURN;    
END_IF;

IF (NOT CHECK_REF(prMaxSpeed^)) THEN
    tmp := Print('prMaxSpeed not valid');
    RETURN;    
END_IF;

// init successful
mbInitDone := TRUE;

aCalcMaxSpeed();

aUpdateLintabOut();


;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pUpdateVelocity ON PU_Task_7 WITH mprAbsFlow^

#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
         
IF NOT mbInitDone THEN
    RETURN;
END_IF;

aCalcMaxSpeed();






;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pUpdateVelocityLintab ON PU_Task_7 WITH mprMaxSpeed^

#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
         
IF NOT mbInitDone THEN
    RETURN;
END_IF;

// update lintab
aUpdateLintabOut();




;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 60 @Pou 25 
@@@BEG_Comment@@@

@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
0 
@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(24)ABUpdateRelLintabVelCore @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
6 
@Var @RT(9)PU_Task_7 @RT(0) @T @F @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(11)mpLintabOut @RT(0) @T @T @REFTO 0 @F @DERIVED 0 @T @T @DT @RT(16)KAPPL_LintabData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(32)OUT: velocity lintab of movement @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(10)mprAbsFlow @RT(0) @T @T @REFTO 0 @T @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(34)IN: maximum absolute flow in l/min @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(11)mprMaxSpeed @RT(0) @T @T @REFTO 0 @T @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(33)IN/OUT: max speed of fwd movement @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(10)mbInitDone @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(28)sv_bCalcMaxValuesFromCylData @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(117)TRUE: calculate max speed and max pressure values by using cylinder data;  FALSE: max values must be entered manually @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

5 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(16)aUpdateLintabOut @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(13)aCalcMaxSpeed @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(5)aInit @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
4 
@Var @RT(10)pLintabOut @RT(0) @T @T @REFTO 0 @F @DERIVED 0 @T @T @DT @RT(16)KAPPL_LintabData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(10)prMaxSpeed @RT(0) @T @T @REFTO 0 @T @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(9)prAbsFlow @RT(0) @T @T @REFTO 0 @T @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(22)absolute flow in l/min @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(3)tmp @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(15)pUpdateVelocity @STRUCTURED_TEXT 
@RT(0) @RT(11)mprAbsFlow^ @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(21)pUpdateVelocityLintab @STRUCTURED_TEXT 
@RT(0) @RT(12)mprMaxSpeed^ @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Body 
@TL(12)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

// save data to Vel lintab
mpLintabOut^.LintabPoints.uNoOfPoints := 2;
mpLintabOut^.LintabPoints.Point[1].rX := 0.0;
mpLintabOut^.LintabPoints.Point[1].rY := 0.0;
mpLintabOut^.LintabPoints.Point[2].rX := mprMaxSpeed^;
mpLintabOut^.LintabPoints.Point[2].rY := 100.0; // %

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(13)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF NOT sv_bCalcMaxValuesFromCylData THEN
   // no calculation necessary
   RETURN;
END_IF;

// max flow in l/min            
mprMaxSpeed^ := mprAbsFlow^;

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(32)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

mbInitDone := FALSE;
mprAbsFlow := prAbsFlow;
mpLintabOut := pLintabOut;
mprMaxSpeed := prMaxSpeed;

IF NOT CHECK_REF(prAbsFlow^) THEN
    tmp := Print('prAbsFlow not valid');
    RETURN;
END_IF;

IF (NOT CHECK_REF(pLintabOut^)) THEN
    tmp := Print('pLintabOut not valid');
    RETURN;    
END_IF;

IF (NOT CHECK_REF(prMaxSpeed^)) THEN
    tmp := Print('prMaxSpeed not valid');
    RETURN;    
END_IF;

// init successful
mbInitDone := TRUE;

aCalcMaxSpeed();

aUpdateLintabOut();

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(15)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
         
IF NOT mbInitDone THEN
    RETURN;
END_IF;

aCalcMaxSpeed();





@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(14)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
         
IF NOT mbInitDone THEN
    RETURN;
END_IF;

// update lintab
aUpdateLintabOut();



@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 
@END_Body 

@END_Contents 
