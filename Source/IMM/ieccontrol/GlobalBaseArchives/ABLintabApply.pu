(*
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

apply a lintab to a output value
needed for converting absolute value outputs to percent / voltage
*)

IMPORT_OVER_LISTFILE
 KAPPL_LintabData
, KCTRL_Lintab_Light
, KCTRL_Lintab_Param_Light

END_IMPORT

ALGORITHM_BLOCK ABLintabApply #DUMMY_EDIT_BLOCK

SYSTEM_OBJECT
 EV_Task_1 : TASK;
END_OBJECT

VAR
 mpLintabPoints : REFTO KAPPL_LintabData;
 abKCTRL_Lintab : KCTRL_Lintab_Light;
 mParams : KCTRL_Lintab_Param_Light;
 mbReParam : BOOL (* lintab changed, need to reinitialize block on next aCalc/aCalcInv *);
 tmp : DINT;
END_VAR

ALGORITHM aInit


VAR_INPUT
 pLintab : REFTO KAPPL_LintabData;
 bLinearExtrapolation : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF NOT CHECK_REF(pLintab^) THEN
   tmp := Print('ABLintabApply:aInit called with invalid Lintab');
   RETURN;
END_IF;
mpLintabPoints := pLintab;
mParams.LintabPoints := pLintab^.LintabPoints;
mParams.Mode.bLinearExtrapolation := bLinearExtrapolation;
mbReParam := TRUE;


;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pLintabchanged ON EV_Task_1(1) WITH mpLintabPoints^

#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

// remember for later that we need to reparam the lintab calculation block
mbReParam := TRUE;


;#END_EDIT_BLOCK END_ALGORITHM

(*
applies a lintab to the input value
*)

ALGORITHM aCalc


VAR_INPUT
 rX : REAL;
END_VAR

VAR_OUTPUT
 rY : REAL;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF mbReParam THEN
   mbReParam := FALSE;
   mParams.LintabPoints := mpLintabPoints^.LintabPoints;
   abKCTRL_Lintab.Par(Param := mParams);
   abKCTRL_Lintab.Init();
END_IF;

abKCTRL_Lintab.Calculate(rX := rX);
rY := abKCTRL_Lintab.Calculate.rY;



;#END_EDIT_BLOCK END_ALGORITHM

(*
applies a lintab to the input value
*)

ALGORITHM aCalcInv


VAR_OUTPUT
 rX : REAL;
END_VAR

VAR_INPUT
 rY : REAL;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF mbReParam THEN
   mbReParam := FALSE;
   mParams.LintabPoints := mpLintabPoints^.LintabPoints;
   abKCTRL_Lintab.Par(Param := mParams);
   abKCTRL_Lintab.Init();
END_IF;

abKCTRL_Lintab.CalculateInv(rY := rY);
rX := abKCTRL_Lintab.CalculateInv.rX;



;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 30 @Pou 25 
@@@BEG_Comment@@@
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

apply a lintab to a output value
needed for converting absolute value outputs to percent / voltage
@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
0 
@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(13)ABLintabApply @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
6 
@Var @RT(14)mpLintabPoints @RT(0) @T @T @REFTO 0 @F @DERIVED 0 @T @T @DT @RT(16)KAPPL_LintabData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(14)abKCTRL_Lintab @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(18)KCTRL_Lintab_Light @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(7)mParams @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(24)KCTRL_Lintab_Param_Light @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(9)mbReParam @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(65)lintab changed, need to reinitialize block on next aCalc/aCalcInv @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(3)tmp @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(9)EV_Task_1 @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

4 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(5)aInit @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
2 
@Var @RT(7)pLintab @RT(0) @T @T @REFTO 0 @F @DERIVED 0 @T @T @DT @RT(16)KAPPL_LintabData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(20)bLinearExtrapolation @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(14)pLintabchanged @STRUCTURED_TEXT 
@RT(0) @RT(15)mpLintabPoints^ @RT(12)EV_Task_1(1) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(5)aCalc @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
2 
@Var @RT(2)rX @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(2)rY @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(8)aCalcInv @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
2 
@Var @RT(2)rX @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(2)rY @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(14)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF NOT CHECK_REF(pLintab^) THEN
   tmp := Print('ABLintabApply:aInit called with invalid Lintab');
   RETURN;
END_IF;
mpLintabPoints := pLintab;
mParams.LintabPoints := pLintab^.LintabPoints;
mParams.Mode.bLinearExtrapolation := bLinearExtrapolation;
mbReParam := TRUE;

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(8)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

// remember for later that we need to reparam the lintab calculation block
mbReParam := TRUE;

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(16)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF mbReParam THEN
   mbReParam := FALSE;
   mParams.LintabPoints := mpLintabPoints^.LintabPoints;
   abKCTRL_Lintab.Par(Param := mParams);
   abKCTRL_Lintab.Init();
END_IF;

abKCTRL_Lintab.Calculate(rX := rX);
rY := abKCTRL_Lintab.Calculate.rY;


@END_Body 

@@@BEG_Comment@@@ 
@TL(1)
applies a lintab to the input value
@@@END_Comment@@@ 

@BEG_Body 
@TL(16)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

IF mbReParam THEN
   mbReParam := FALSE;
   mParams.LintabPoints := mpLintabPoints^.LintabPoints;
   abKCTRL_Lintab.Par(Param := mParams);
   abKCTRL_Lintab.Init();
END_IF;

abKCTRL_Lintab.CalculateInv(rY := rY);
rX := abKCTRL_Lintab.CalculateInv.rX;


@END_Body 

@@@BEG_Comment@@@ 
@TL(1)
applies a lintab to the input value
@@@END_Comment@@@ 
@END_Body 

@END_Contents 
