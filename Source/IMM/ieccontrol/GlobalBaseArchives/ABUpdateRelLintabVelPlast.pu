(*
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

same as ABUpdateRelLintab, but only updates pressure lintab
also there is only one direction
used for updating RPM lintab
*)

IMPORT_OVER_LISTFILE
 FCalcScrewCircumfenceSpeed
, FScaleAndFloor
, tnDataState
, KAPPL_LintabData

END_IMPORT

ALGORITHM_BLOCK ABUpdateRelLintabVelPlast #DUMMY_EDIT_BLOCK

SYSTEM_VAR
 sv_DataState : tnDataState;
 sv_iReadMachineDataCount : UDINT;
END_VAR

SYSTEM_OBJECT
 PU_Task_7 : TASK;
END_OBJECT

VAR
 mpLintabInV : REFTO KAPPL_LintabData;
 mpLintabOutV : REFTO KAPPL_LintabData;
 mprMaxSpeed : REFTO REAL;
 mbInitDone : BOOL;
 mprScrewDiameter : REFTO REAL;
 mprMaxRPM : REFTO REAL (* max. RPM from calibration *);
 mprMaxRPMProfile : REFTO REAL (* max. RPM used for profiles *);
 mprMaxRPMReducePercent : REFTO REAL (* profile RPM reduce percentage (0-100%) *);
 miMaxRPMDigitsToFloor : SINT := 0 (* significant digits to floor for RPM profile *);
END_VAR

ALGORITHM aUpdateLintabOut


VAR_TEMP
 i : UDINT;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

(* convert lintab from RPM to cm/s screw circumfence speed *)
FOR i := 1 TO mpLintabInV^.LintabPoints.uNoOfPoints DO
   mpLintabOutV^.LintabPoints.Point[i].rX := FCalcScrewCircumfenceSpeed(rDiameter := mprScrewDiameter^, rRPM := mpLintabInV^.LintabPoints.Point[i].rX);// * rTmp;
   mpLintabOutV^.LintabPoints.Point[i].rY := mpLintabInV^.LintabPoints.Point[i].rY;
END_FOR;
mpLintabOutV^.LintabPoints.uNoOfPoints := mpLintabInV^.LintabPoints.uNoOfPoints;


;#END_EDIT_BLOCK END_ALGORITHM

ALGORITHM aCalcMaxSpeed

#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

mprMaxSpeed^ := FCalcScrewCircumfenceSpeed(rDiameter := mprScrewDiameter^, rRPM := mprMaxRPMProfile^);


;#END_EDIT_BLOCK END_ALGORITHM

(*
update pressure / speed lintabs for plast movement

update pLintabOutP and pLintabOutV according to the other parameters
the out lintab is updated when one of the input parameters changes
prMaxPressure points to the max pressure variable of the movement
prMaxSpeed is the maximum circumfence speed of the screw
it will be updated when max RPM input value or the prScrewDiameter changes
*)

ALGORITHM aInit


VAR_INPUT
 prScrewDiameter : REFTO REAL (* IN: screw diameter *);
 prMaxRPM : REFTO REAL (* IN: max RPM of screw *);
 prMaxRPMProfile : REFTO REAL (* IN: max RPM used for profile *);
 prMaxRPMReducePercent : REFTO REAL (* IN: max RPM reduce percentage *);
 iMaxRPMDigitsToFloor : SINT (* IN: max. significant digits to floor for RPM profile *);
 pLintabInV : REFTO KAPPL_LintabData (* IN: screw lintab RPM to % *);
 pLintabOutV : REFTO KAPPL_LintabData (* OUT: screw lintab cm/s to % *);
 prMaxSpeed : REFTO REAL (* OUT: max circumfence speed of screw in cm/s *);
END_VAR

VAR_TEMP
 tmp : DINT;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

mbInitDone := FALSE;

IF (NOT CHECK_REF(pLintabInV^)) OR (NOT CHECK_REF(pLintabOutV^)) THEN
    tmp := Print('pLintabInP or pLintabInV not valid');
    RETURN;
END_IF;

IF NOT CHECK_REF(prScrewDiameter^) THEN
    tmp := Print('prMaxPressure not valid');
    RETURN;
END_IF;

IF NOT CHECK_REF(prMaxRPM^) THEN
    tmp := Print('prMaxRPM not valid');
    RETURN;
END_IF;

IF NOT CHECK_REF(prMaxRPMProfile^) THEN
    tmp := Print('prMaxRPMProfile not valid');
    RETURN;
END_IF;

IF NOT CHECK_REF(prMaxRPMReducePercent^) THEN
    tmp := Print('prMaxRPMReducePercent not valid');
    RETURN;
END_IF;


IF NOT CHECK_REF(prMaxSpeed^) THEN
    tmp := Print('prMaxSpeed not valid');
    RETURN;
END_IF;

IF NOT CHECK_REF(prScrewDiameter^) THEN
    tmp := Print('prScrewDiameter not valid');
    RETURN;
END_IF;


mpLintabInV := pLintabInV;
mpLintabOutV := pLintabOutV;
mprScrewDiameter := prScrewDiameter;
mprMaxRPM := prMaxRPM;
mprMaxRPMProfile := prMaxRPMProfile;
mprMaxSpeed := prMaxSpeed;
mprMaxRPMReducePercent := prMaxRPMReducePercent;
miMaxRPMDigitsToFloor := iMaxRPMDigitsToFloor;        

// init successful
mbInitDone := TRUE;

aCalcMaxSpeed();

aUpdateLintabOut();


;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pUpdateRPM ON PU_Task_7 WITH mprMaxRPM^


VAR
 rScalePercent : REAL := 100.0;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
         
IF NOT mbInitDone OR (sv_DataState = nReadMachineData) THEN
   RETURN;
END_IF;

IF (sv_DataState = nReady AND (mprMaxRPMProfile^ > mprMaxRPM^)) THEN
   // prevent recalculation on machine data load except if max. value exceeds custom value
   IF mprMaxRPMReducePercent <> EMPTY THEN
      rScalePercent := 100.0 - mprMaxRPMReducePercent^;
   END_IF;
   mprMaxRPMProfile^ := FScaleAndFloor(mprMaxRPM^, rScalePercent, miMaxRPMDigitsToFloor);
END_IF;







;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pUpdateVelocity ON PU_Task_7 WITH mprScrewDiameter^,mprMaxRPMProfile^

#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
         
IF NOT mbInitDone OR (sv_DataState = nReadMachineData) THEN
   RETURN;
END_IF;

aCalcMaxSpeed();





;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pUpdateVelocityLintab ON PU_Task_7 WITH mprMaxSpeed^,mpLintabInV^

#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
         
IF NOT mbInitDone THEN
    RETURN;
END_IF;

//update lintab
aUpdateLintabOut();






;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pMachineDataLoaded ON PU_Task_7 WITH sv_iReadMachineDataCount

#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

aCalcMaxSpeed();


;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 60 @Pou 25 
@@@BEG_Comment@@@
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

same as ABUpdateRelLintab, but only updates pressure lintab
also there is only one direction
used for updating RPM lintab
@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
2 
@Var @RT(26)FCalcScrewCircumfenceSpeed @RT(0) @T @T @DERIVED 0 @F @RT(8)FUNCTION @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(14)FScaleAndFloor @RT(0) @T @T @DERIVED 0 @F @RT(8)FUNCTION @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(25)ABUpdateRelLintabVelPlast @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
12 
@Var @RT(9)PU_Task_7 @RT(0) @T @F @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(12)sv_DataState @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(11)tnDataState @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(11)mpLintabInV @RT(0) @T @T @REFTO 0 @F @DERIVED 0 @T @T @DT @RT(16)KAPPL_LintabData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(12)mpLintabOutV @RT(0) @T @T @REFTO 0 @F @DERIVED 0 @T @T @DT @RT(16)KAPPL_LintabData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(11)mprMaxSpeed @RT(0) @T @T @REFTO 0 @T @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(10)mbInitDone @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(16)mprScrewDiameter @RT(0) @T @T @REFTO 0 @T @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(9)mprMaxRPM @RT(0) @T @T @REFTO 0 @T @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(25)max. RPM from calibration @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(16)mprMaxRPMProfile @RT(0) @T @T @REFTO 0 @T @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(26)max. RPM used for profiles @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(22)mprMaxRPMReducePercent @RT(0) @T @T @REFTO 0 @T @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(38)profile RPM reduce percentage (0-100%) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(21)miMaxRPMDigitsToFloor @RT(0) @T @F @DT @RT(4)SINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(1)0 @RT(43)significant digits to floor for RPM profile @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(24)sv_iReadMachineDataCount @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(5)UDINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

7 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(16)aUpdateLintabOut @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(1)i @RT(0) @T @F @DT @RT(5)UDINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 4 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(13)aCalcMaxSpeed @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(5)aInit @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
9 
@Var @RT(15)prScrewDiameter @RT(0) @T @T @REFTO 0 @T @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(18)IN: screw diameter @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(8)prMaxRPM @RT(0) @T @T @REFTO 0 @T @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(20)IN: max RPM of screw @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(15)prMaxRPMProfile @RT(0) @T @T @REFTO 0 @T @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(28)IN: max RPM used for profile @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(21)prMaxRPMReducePercent @RT(0) @T @T @REFTO 0 @T @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(29)IN: max RPM reduce percentage @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(20)iMaxRPMDigitsToFloor @RT(0) @T @F @DT @RT(4)SINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(52)IN: max. significant digits to floor for RPM profile @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(10)pLintabInV @RT(0) @T @T @REFTO 0 @F @DERIVED 0 @T @T @DT @RT(16)KAPPL_LintabData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(25)IN: screw lintab RPM to % @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(11)pLintabOutV @RT(0) @T @T @REFTO 0 @F @DERIVED 0 @T @T @DT @RT(16)KAPPL_LintabData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(27)OUT: screw lintab cm/s to % @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(10)prMaxSpeed @RT(0) @T @T @REFTO 0 @T @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(43)OUT: max circumfence speed of screw in cm/s @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(3)tmp @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 4 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(10)pUpdateRPM @STRUCTURED_TEXT 
@RT(0) @RT(10)mprMaxRPM^ @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(13)rScalePercent @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(5)100.0 @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(15)pUpdateVelocity @STRUCTURED_TEXT 
@RT(0) @RT(35)mprScrewDiameter^,mprMaxRPMProfile^ @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(21)pUpdateVelocityLintab @STRUCTURED_TEXT 
@RT(0) @RT(25)mprMaxSpeed^,mpLintabInV^ @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(18)pMachineDataLoaded @STRUCTURED_TEXT 
@RT(0) @RT(24)sv_iReadMachineDataCount @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Body 
@TL(12)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

(* convert lintab from RPM to cm/s screw circumfence speed *)
FOR i := 1 TO mpLintabInV^.LintabPoints.uNoOfPoints DO
   mpLintabOutV^.LintabPoints.Point[i].rX := FCalcScrewCircumfenceSpeed(rDiameter := mprScrewDiameter^, rRPM := mpLintabInV^.LintabPoints.Point[i].rX);// * rTmp;
   mpLintabOutV^.LintabPoints.Point[i].rY := mpLintabInV^.LintabPoints.Point[i].rY;
END_FOR;
mpLintabOutV^.LintabPoints.uNoOfPoints := mpLintabInV^.LintabPoints.uNoOfPoints;

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(7)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

mprMaxSpeed^ := FCalcScrewCircumfenceSpeed(rDiameter := mprScrewDiameter^, rRPM := mprMaxRPMProfile^);

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(60)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

mbInitDone := FALSE;

IF (NOT CHECK_REF(pLintabInV^)) OR (NOT CHECK_REF(pLintabOutV^)) THEN
    tmp := Print('pLintabInP or pLintabInV not valid');
    RETURN;
END_IF;

IF NOT CHECK_REF(prScrewDiameter^) THEN
    tmp := Print('prMaxPressure not valid');
    RETURN;
END_IF;

IF NOT CHECK_REF(prMaxRPM^) THEN
    tmp := Print('prMaxRPM not valid');
    RETURN;
END_IF;

IF NOT CHECK_REF(prMaxRPMProfile^) THEN
    tmp := Print('prMaxRPMProfile not valid');
    RETURN;
END_IF;

IF NOT CHECK_REF(prMaxRPMReducePercent^) THEN
    tmp := Print('prMaxRPMReducePercent not valid');
    RETURN;
END_IF;


IF NOT CHECK_REF(prMaxSpeed^) THEN
    tmp := Print('prMaxSpeed not valid');
    RETURN;
END_IF;

IF NOT CHECK_REF(prScrewDiameter^) THEN
    tmp := Print('prScrewDiameter not valid');
    RETURN;
END_IF;


mpLintabInV := pLintabInV;
mpLintabOutV := pLintabOutV;
mprScrewDiameter := prScrewDiameter;
mprMaxRPM := prMaxRPM;
mprMaxRPMProfile := prMaxRPMProfile;
mprMaxSpeed := prMaxSpeed;
mprMaxRPMReducePercent := prMaxRPMReducePercent;
miMaxRPMDigitsToFloor := iMaxRPMDigitsToFloor;        

// init successful
mbInitDone := TRUE;

aCalcMaxSpeed();

aUpdateLintabOut();

@END_Body 

@@@BEG_Comment@@@ 
@TL(7)
update pressure / speed lintabs for plast movement

update pLintabOutP and pLintabOutV according to the other parameters
the out lintab is updated when one of the input parameters changes
prMaxPressure points to the max pressure variable of the movement
prMaxSpeed is the maximum circumfence speed of the screw
it will be updated when max RPM input value or the prScrewDiameter changes
@@@END_Comment@@@ 

@BEG_Body 
@TL(22)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
         
IF NOT mbInitDone OR (sv_DataState = nReadMachineData) THEN
   RETURN;
END_IF;

IF (sv_DataState = nReady AND (mprMaxRPMProfile^ > mprMaxRPM^)) THEN
   // prevent recalculation on machine data load except if max. value exceeds custom value
   IF mprMaxRPMReducePercent <> EMPTY THEN
      rScalePercent := 100.0 - mprMaxRPMReducePercent^;
   END_IF;
   mprMaxRPMProfile^ := FScaleAndFloor(mprMaxRPM^, rScalePercent, miMaxRPMDigitsToFloor);
END_IF;






@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(14)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
         
IF NOT mbInitDone OR (sv_DataState = nReadMachineData) THEN
   RETURN;
END_IF;

aCalcMaxSpeed();




@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(16)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
         
IF NOT mbInitDone THEN
    RETURN;
END_IF;

//update lintab
aUpdateLintabOut();





@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(7)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

aCalcMaxSpeed();

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 
@END_Body 

@END_Contents 
