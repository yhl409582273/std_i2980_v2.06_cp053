IMPORT_OVER_LISTFILE
 TON

END_IMPORT

FUNCTION_BLOCK FBDeltaWye #DUMMY_EDIT_BLOCK

VAR_INPUT
 bStart : BOOL;
 bStop : BOOL;
 dOnY : TIME;
 dDelayTri : TIME;
END_VAR

VAR_OUTPUT
 bOnMain : BOOL;
 bOnY : BOOL;
 bOnTri : BOOL;
 bStarting : BOOL;
 bStarted : BOOL;
 bMotorRun : BOOL;
END_VAR

VAR
 Timer1 : TON;
 Timer2 : TON;
 iState : DINT;
END_VAR
#BEGIN_EDIT_BLOCK
IF bStart AND NOT bStop THEN
    CASE iState OF
        0: bOnMain := TRUE;
           bOnY := TRUE;
           bStarting := TRUE;
           bMotorRun := TRUE;
           Timer1(IN :=TRUE,
                  PT :=dOnY);
           IF Timer1.Q THEN          
               bOnY:=FALSE;
               Timer1(IN := FALSE);
               Timer2(IN := FALSE);
               iState := 10;
           END_IF;
        
       10: Timer2(IN :=TRUE,
                  PT :=dDelayTri);
           IF Timer2.Q THEN
               bOnTri :=TRUE;
               bStarted :=TRUE;
               bStarting := FALSE;
               Timer1(IN := FALSE);
               Timer2(IN := FALSE);
           END_IF;
    END_CASE;
END_IF;
IF bStop THEN
    iState := 0;    
    bOnMain := FALSE;
    bOnTri := FALSE;
    bOnY := FALSE;
    bStarting := FALSE;
    bStarted :=FALSE;
    bMotorRun := FALSE;
    Timer1(IN := FALSE);
    Timer2(IN := FALSE);
END_IF;



;#END_EDIT_BLOCK END_FUNCTION_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 10 @Pou 25 
@@@BEG_Comment@@@

@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
0 
@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@FUNCTION_BLOCK @RT(10)FBDeltaWye @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
13 
@Var @RT(6)bStart @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(5)bStop @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(4)dOnY @RT(0) @T @F @DT @RT(4)TIME @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(9)dDelayTri @RT(0) @T @F @DT @RT(4)TIME @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(7)bOnMain @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(4)bOnY @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(6)bOnTri @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(9)bStarting @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(8)bStarted @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(9)bMotorRun @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(6)Timer1 @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(3)TON @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(6)Timer2 @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(3)TON @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(6)iState @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(39)
IF bStart AND NOT bStop THEN
    CASE iState OF
        0: bOnMain := TRUE;
           bOnY := TRUE;
           bStarting := TRUE;
           bMotorRun := TRUE;
           Timer1(IN :=TRUE,
                  PT :=dOnY);
           IF Timer1.Q THEN          
               bOnY:=FALSE;
               Timer1(IN := FALSE);
               Timer2(IN := FALSE);
               iState := 10;
           END_IF;
        
       10: Timer2(IN :=TRUE,
                  PT :=dDelayTri);
           IF Timer2.Q THEN
               bOnTri :=TRUE;
               bStarted :=TRUE;
               bStarting := FALSE;
               Timer1(IN := FALSE);
               Timer2(IN := FALSE);
           END_IF;
    END_CASE;
END_IF;
IF bStop THEN
    iState := 0;    
    bOnMain := FALSE;
    bOnTri := FALSE;
    bOnY := FALSE;
    bStarting := FALSE;
    bStarted :=FALSE;
    bMotorRun := FALSE;
    Timer1(IN := FALSE);
    Timer2(IN := FALSE);
END_IF;


@END_Body 

@END_Contents 
