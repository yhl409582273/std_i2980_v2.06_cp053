(*
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".


*)

IMPORT_OVER_LISTFILE
 STOP_SYSTEM
, SET_ALARM
, KSYS_Status
, KCAT_Status
, KCAT_HandleData

END_IMPORT

FUNCTION ASSERT : BOOL #DUMMY_EDIT_BLOCK

VAR_INPUT
 b : BOOL;
 erAssert : ALARM;
END_VAR

VAR
 dummy : DINT;
 Status : KSYS_Status;
 StatusCat : KCAT_Status;
 DataHandle : KCAT_HandleData;
 iLogEnable : DINT;
END_VAR

VAR CONSTANT
 iNull : DINT := 0;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

ASSERT := b;

IF b THEN
    RETURN;
END_IF;

dummy := Print('$n$n$n');
dummy := Print('************************************************************');
dummy := Print('***************** KePlast.IEC: ASSERT **********************');
dummy := Print('******************** stopping system ***********************');
dummy := Print('************************************************************$n$n$n');

DataHandle := KCAT_GetHandle('System.LogEnable');   
IF DataHandle.Status = KCAT_Status_OK THEN
   StatusCat := KCAT_GetValue(Handle := DataHandle.Handle,
   Buffer := iLogEnable);        
END_IF;

SET_ALARM(erAssert);

IF iLogEnable = 1 THEN
    Status:=SET_WVEVENT(9999);
END_IF;

dummy := dummy / iNull;

STOP_SYSTEM();



;#END_EDIT_BLOCK END_FUNCTION



#END_OF_IEC_PART

@Puma @IecEditor 6 96 @Pou 25 
@@@BEG_Comment@@@
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".


@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
2 
@Var @RT(11)STOP_SYSTEM @RT(0) @T @T @DERIVED 0 @F @RT(23)KEBA_STANDARD_PROCEDURE @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(9)SET_ALARM @RT(0) @T @T @DERIVED 0 @F @RT(23)KEBA_STANDARD_PROCEDURE @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@FUNCTION @RT(6)ASSERT @STRUCTURED_TEXT 
@RT(4)BOOL @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
8 
@Var @RT(5)dummy @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(1)b @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(5)iNull @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(1)0 @RT(0) @RT(0) 
@END_Attrib 
1 15 @F @F @F @F 

@Var @RT(8)erAssert @RT(0) @T @F @DT @RT(5)ALARM @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(6)Status @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(11)KSYS_Status @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(9)StatusCat @RT(0) @T @T @DERIVED 0 @F @RT(11)KCAT_Status @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(10)DataHandle @RT(0) @T @T @DERIVED 0 @F @RT(15)KCAT_HandleData @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(10)iLogEnable @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(34)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

ASSERT := b;

IF b THEN
    RETURN;
END_IF;

dummy := Print('$n$n$n');
dummy := Print('************************************************************');
dummy := Print('***************** KePlast.IEC: ASSERT **********************');
dummy := Print('******************** stopping system ***********************');
dummy := Print('************************************************************$n$n$n');

DataHandle := KCAT_GetHandle('System.LogEnable');   
IF DataHandle.Status = KCAT_Status_OK THEN
   StatusCat := KCAT_GetValue(Handle := DataHandle.Handle,
   Buffer := iLogEnable);        
END_IF;

SET_ALARM(erAssert);

IF iLogEnable = 1 THEN
    Status:=SET_WVEVENT(9999);
END_IF;

dummy := dummy / iNull;

STOP_SYSTEM();


@END_Body 

@END_Contents 
