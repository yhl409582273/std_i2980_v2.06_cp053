IMPORT_OVER_LISTFILE
 IS_LINKED
, cBarInvert
, tyPanelButton
, tevPanelButtonRegisterData
, tevPanelButtonRegister
, ABManualButton
, tsDeviceId
, tsPanelButton

END_IMPORT

ALGORITHM_BLOCK ABButtonControl #DUMMY_EDIT_BLOCK

SYSTEM_VAR
 sv_bInitStart : BOOL;
 sv_bDeviceReady : BOOL;
 sv_bTransducerAvailable : BOOL;
 sv_iPanelMovementSelector : DINT;
 sv_PanelButtons : tyPanelButton;
 di_ButtonFwd : BOOL;
 di_ButtonBwd : BOOL;
 sv_bNozzleFwd : BOOL;
 sv_bNozzleBwd : BOOL;
 sv_bButtonFwd : BOOL;
 sv_bButtonBwd : BOOL;
 di_ButtonGeneral1 : BOOL;
 di_ButtonGeneral2 : BOOL;
 sv_DeviceId : tsDeviceId;
 sv_rNozzlePosition : REAL;
 sv_rNozzleStroke : REAL;
END_VAR

SYSTEM_OBJECT
 evPanelButtonRegister : tevPanelButtonRegister;
 PU_Task_7 : TASK;
 PU_Task_13 : TASK;
END_OBJECT

VAR
 evPanelButtonRegisterData : tevPanelButtonRegisterData;
 abManualButton : ABManualButton;
 mpbButtonGeneralFwd : REFTO BOOL;
 mpbButtonGeneralBwd : REFTO BOOL;
 mbDIButtonFwdLinked : BOOL;
 mbDIButtonBwdLinked : BOOL;
 mbDIButtonGeneralFwdLinked : BOOL;
 mbDIButtonGeneralBwdLinked : BOOL;
 mpiPanelMovementSelector : REFTO DINT;
END_VAR

VAR CONSTANT
 cButtonMoveFwdBwd : DINT := 1;
END_VAR

POSTUPDATE_ALGORITHM pRegisterButtons ON PU_Task_13 WITH sv_bInitStart

#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

mpbButtonGeneralFwd := EMPTY;
mpbButtonGeneralBwd := EMPTY;

mbDIButtonFwdLinked := IS_LINKED(di_ButtonFwd);
mbDIButtonBwdLinked := IS_LINKED(di_ButtonBwd);

mbDIButtonGeneralFwdLinked := IS_LINKED(di_ButtonGeneral1);
mbDIButtonGeneralBwdLinked := IS_LINKED(di_ButtonGeneral2);

IF (mbDIButtonGeneralFwdLinked AND mbDIButtonGeneralBwdLinked) THEN
    mpiPanelMovementSelector := @sv_iPanelMovementSelector;
END_IF;


evPanelButtonRegisterData.Button.nPanelButtonType := nPanelButtonMovement; 
evPanelButtonRegisterData.Button.iCompId := sv_DeviceId.CompId;
evPanelButtonRegisterData.Button.iIndexId := sv_DeviceId.IndexId;
evPanelButtonRegisterData.Button.iButtonId := cButtonMoveFwdBwd;
evPanelButtonRegisterData.Button.pbActionVar1 := @sv_bButtonFwd;
evPanelButtonRegisterData.Button.pbActionVar2 := @sv_bButtonBwd;
IF sv_bTransducerAvailable THEN
   evPanelButtonRegisterData.Button.Optional.prActVar := @sv_rNozzlePosition;
END_IF;                     
evPanelButtonRegisterData.Button.Optional.prMaxVar := @sv_rNozzleStroke;
evPanelButtonRegisterData.Button.Optional.prMinVar :=  EMPTY;
evPanelButtonRegisterData.Button.Optional.iBarAttr := cBarInvert;
evPanelButtonRegisterData.Button.Optional.pbLimitSwitch1 := @sv_bNozzleFwd;
evPanelButtonRegisterData.Button.Optional.pbLimitSwitch2 := @sv_bNozzleBwd;
SET_EVENT(evPanelButtonRegister, evPanelButtonRegisterData);


;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pButtonFwd ON PU_Task_7 WITH di_ButtonFwd, sv_bButtonFwd, mpbButtonGeneralFwd^


VAR
 bButton : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

// soft panel button
bButton := sv_bButtonFwd;

// hw panel button
IF mbDIButtonFwdLinked THEN
    bButton := bButton OR di_ButtonFwd;    
END_IF;

// external panel button
IF CHECK_REF(mpbButtonGeneralFwd^) THEN
    bButton := bButton OR mpbButtonGeneralFwd^;
END_IF;

abManualButton.aButtonFwd(bButtonFwd := bButton);



;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pButtonBwd ON PU_Task_7 WITH di_ButtonBwd, sv_bButtonBwd, mpbButtonGeneralBwd^


VAR
 bButton : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

// soft panel button
bButton := sv_bButtonBwd;

// hw panel button
IF mbDIButtonBwdLinked THEN
    bButton := bButton OR di_ButtonBwd;    
END_IF;

// external panel button
IF CHECK_REF(mpbButtonGeneralBwd^) THEN
    bButton := bButton OR mpbButtonGeneralBwd^;
END_IF;

abManualButton.aButtonBwd(bButtonBwd := bButton);


;#END_EDIT_BLOCK END_ALGORITHM

POSTUPDATE_ALGORITHM pMoveSelectorChanged ON PU_Task_7 WITH mpiPanelMovementSelector^


VAR
 Button : tsPanelButton;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

mpbButtonGeneralFwd := EMPTY;
mpbButtonGeneralBwd := EMPTY;

IF (NOT sv_bDeviceReady) THEN
    // stop active movements
    abManualButton.aButtonBwd(bButtonBwd := FALSE);
    abManualButton.aButtonFwd(bButtonFwd := FALSE);    
END_IF;

IF (sv_iPanelMovementSelector > 0) THEN                        
    Button := sv_PanelButtons[sv_iPanelMovementSelector];
    IF Button.iCompId = sv_DeviceId.CompId AND 
        Button.iIndexId = sv_DeviceId.IndexId THEN
        IF Button.iButtonId = cButtonMoveFwdBwd THEN
            mpbButtonGeneralFwd := @di_ButtonGeneral1;
            mpbButtonGeneralBwd := @di_ButtonGeneral2;          
        END_IF;    
    END_IF;        
END_IF;
      



;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 150 @Pou 25 
@@@BEG_Comment@@@

@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
1 
@Var @RT(9)IS_LINKED @RT(0) @T @T @DERIVED 0 @F @RT(22)KEBA_STANDARD_FUNCTION @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
1 
@Var @RT(10)cBarInvert @RT(0) @T @F @DT @RT(4)BYTE @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
0 @RT(1)1 @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(15)ABButtonControl @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
29 
@Var @RT(13)sv_bInitStart @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(15)sv_bDeviceReady @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(23)sv_bTransducerAvailable @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(25)sv_iPanelMovementSelector @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(15)sv_PanelButtons @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(13)tyPanelButton @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(25)evPanelButtonRegisterData @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(26)tevPanelButtonRegisterData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(21)evPanelButtonRegister @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(22)tevPanelButtonRegister @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(14)abManualButton @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(14)ABManualButton @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(12)di_ButtonFwd @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(12)di_ButtonBwd @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(13)sv_bNozzleFwd @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(13)sv_bNozzleBwd @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(13)sv_bButtonFwd @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(13)sv_bButtonBwd @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(17)di_ButtonGeneral1 @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(17)di_ButtonGeneral2 @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(9)PU_Task_7 @RT(0) @T @F @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(10)PU_Task_13 @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(11)sv_DeviceId @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(10)tsDeviceId @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(18)sv_rNozzlePosition @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(16)sv_rNozzleStroke @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(17)cButtonMoveFwdBwd @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(1)1 @RT(0) @RT(0) 
@END_Attrib 
1 15 @F @F @F @F 

@Var @RT(19)mpbButtonGeneralFwd @RT(0) @T @T @REFTO 0 @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(19)mpbButtonGeneralBwd @RT(0) @T @T @REFTO 0 @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(19)mbDIButtonFwdLinked @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(19)mbDIButtonBwdLinked @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(26)mbDIButtonGeneralFwdLinked @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(26)mbDIButtonGeneralBwdLinked @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(24)mpiPanelMovementSelector @RT(0) @T @T @REFTO 0 @T @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

4 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(16)pRegisterButtons @STRUCTURED_TEXT 
@RT(0) @RT(13)sv_bInitStart @RT(10)PU_Task_13 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(10)pButtonFwd @STRUCTURED_TEXT 
@RT(0) @RT(49)di_ButtonFwd, sv_bButtonFwd, mpbButtonGeneralFwd^ @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(7)bButton @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(10)pButtonBwd @STRUCTURED_TEXT 
@RT(0) @RT(49)di_ButtonBwd, sv_bButtonBwd, mpbButtonGeneralBwd^ @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(7)bButton @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(20)pMoveSelectorChanged @STRUCTURED_TEXT 
@RT(0) @RT(25)mpiPanelMovementSelector^ @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
1 
@Var @RT(6)Button @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(13)tsPanelButton @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(35)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

mpbButtonGeneralFwd := EMPTY;
mpbButtonGeneralBwd := EMPTY;

mbDIButtonFwdLinked := IS_LINKED(di_ButtonFwd);
mbDIButtonBwdLinked := IS_LINKED(di_ButtonBwd);

mbDIButtonGeneralFwdLinked := IS_LINKED(di_ButtonGeneral1);
mbDIButtonGeneralBwdLinked := IS_LINKED(di_ButtonGeneral2);

IF (mbDIButtonGeneralFwdLinked AND mbDIButtonGeneralBwdLinked) THEN
    mpiPanelMovementSelector := @sv_iPanelMovementSelector;
END_IF;


evPanelButtonRegisterData.Button.nPanelButtonType := nPanelButtonMovement; 
evPanelButtonRegisterData.Button.iCompId := sv_DeviceId.CompId;
evPanelButtonRegisterData.Button.iIndexId := sv_DeviceId.IndexId;
evPanelButtonRegisterData.Button.iButtonId := cButtonMoveFwdBwd;
evPanelButtonRegisterData.Button.pbActionVar1 := @sv_bButtonFwd;
evPanelButtonRegisterData.Button.pbActionVar2 := @sv_bButtonBwd;
IF sv_bTransducerAvailable THEN
   evPanelButtonRegisterData.Button.Optional.prActVar := @sv_rNozzlePosition;
END_IF;                     
evPanelButtonRegisterData.Button.Optional.prMaxVar := @sv_rNozzleStroke;
evPanelButtonRegisterData.Button.Optional.prMinVar :=  EMPTY;
evPanelButtonRegisterData.Button.Optional.iBarAttr := cBarInvert;
evPanelButtonRegisterData.Button.Optional.pbLimitSwitch1 := @sv_bNozzleFwd;
evPanelButtonRegisterData.Button.Optional.pbLimitSwitch2 := @sv_bNozzleBwd;
SET_EVENT(evPanelButtonRegister, evPanelButtonRegisterData);

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(21)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

// soft panel button
bButton := sv_bButtonFwd;

// hw panel button
IF mbDIButtonFwdLinked THEN
    bButton := bButton OR di_ButtonFwd;    
END_IF;

// external panel button
IF CHECK_REF(mpbButtonGeneralFwd^) THEN
    bButton := bButton OR mpbButtonGeneralFwd^;
END_IF;

abManualButton.aButtonFwd(bButtonFwd := bButton);


@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(20)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

// soft panel button
bButton := sv_bButtonBwd;

// hw panel button
IF mbDIButtonBwdLinked THEN
    bButton := bButton OR di_ButtonBwd;    
END_IF;

// external panel button
IF CHECK_REF(mpbButtonGeneralBwd^) THEN
    bButton := bButton OR mpbButtonGeneralBwd^;
END_IF;

abManualButton.aButtonBwd(bButtonBwd := bButton);

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 

@BEG_Body 
@TL(27)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

mpbButtonGeneralFwd := EMPTY;
mpbButtonGeneralBwd := EMPTY;

IF (NOT sv_bDeviceReady) THEN
    // stop active movements
    abManualButton.aButtonBwd(bButtonBwd := FALSE);
    abManualButton.aButtonFwd(bButtonFwd := FALSE);    
END_IF;

IF (sv_iPanelMovementSelector > 0) THEN                        
    Button := sv_PanelButtons[sv_iPanelMovementSelector];
    IF Button.iCompId = sv_DeviceId.CompId AND 
        Button.iIndexId = sv_DeviceId.IndexId THEN
        IF Button.iButtonId = cButtonMoveFwdBwd THEN
            mpbButtonGeneralFwd := @di_ButtonGeneral1;
            mpbButtonGeneralBwd := @di_ButtonGeneral2;          
        END_IF;    
    END_IF;        
END_IF;
      


@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 
@END_Body 

@END_Contents 
