(*
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

This block handles ejector and core override safety mode. 
If OperationMode1.di_CoreEjectorSafetySwitch is linked, the variables system.sv_bOverrideCoreSafety
and system.sv_bOverrideEjectorSafety are set depending on the switch, userlevel and operationmode.
*)

IMPORT_OVER_LISTFILE
 SET_ALARM
, cLevelProcessOperator
, tnOperationMode
, R_TRIG

END_IMPORT

ALGORITHM_BLOCK ABOverrideSafetySwitch #DUMMY_EDIT_BLOCK

SYSTEM_VAR
 sv_bInitDone : BOOL;
 di_CoreEjectorSafetySwitch : BOOL;
 sv_UserLevel : DINT (* actual userlevel *);
 sv_OperationMode : tnOperationMode;
 sv_bOverrideCoreSafety : BOOL (* overrides safety settings for core movements in setup mode *);
 sv_bOverrideEjectorSafety : BOOL (* overrides safety settings for ejector movements in setup mode *);
END_VAR

SYSTEM_OBJECT
 erUserLevelLow : ALARM;
 erSetupModeRequired : ALARM;
 erOverrideSafetyModeOn : ALARM;
 erOverrideSafetyModeOff : ALARM;
 PU_Task_13 : TASK;
END_OBJECT

(*
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

*)

POSTUPDATE_ALGORITHM pOverrideSafettySwitch ON PU_Task_13 WITH di_CoreEjectorSafetySwitch,sv_OperationMode,sv_UserLevel


VAR_TEMP
 bOverrideNew : BOOL;
END_VAR

VAR
 fbRTrigSwitch : R_TRIG;
 bOverrideLast : BOOL;
 bIsDILinked : BOOL;
 bInitDone : BOOL;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
IF (NOT bInitDone) THEN
    bIsDILinked := IS_LINKED(di_CoreEjectorSafetySwitch); 
    bInitDone := TRUE; 
END_IF;

IF (NOT bIsDILinked) THEN
    RETURN; 
END_IF;

bOverrideNew := FALSE; 

fbRTrigSwitch(CLK := di_CoreEjectorSafetySwitch); 
              
IF (fbRTrigSwitch.Q AND sv_bInitDone) THEN
    IF (sv_UserLevel < cLevelProcessOperator) THEN
        SET_ALARM(Name := erUserLevelLow, Param1 := DINT_TO_INT(cLevelProcessOperator)); 
    ELSIF (sv_OperationMode <> nSetup)THEN
        SET_ALARM(erSetupModeRequired);
    ELSE 
        bOverrideNew := TRUE; 
    END_IF;
END_IF;              
 
IF (bOverrideNew AND (NOT bOverrideLast)) THEN
    QUIT_ALARM(erOverrideSafetyModeOff);
    SET_ALARM(erOverrideSafetyModeOn);
END_IF;

IF ((NOT bOverrideNew) AND (bOverrideLast)) THEN
    QUIT_ALARM(erOverrideSafetyModeOn);
    SET_ALARM(erOverrideSafetyModeOff);
END_IF;
       
sv_bOverrideCoreSafety := bOverrideNew;
sv_bOverrideEjectorSafety := bOverrideNew;
bOverrideLast := bOverrideNew;



;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 131 @Pou 25 
@@@BEG_Comment@@@
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

This block handles ejector and core override safety mode. 
If OperationMode1.di_CoreEjectorSafetySwitch is linked, the variables system.sv_bOverrideCoreSafety
and system.sv_bOverrideEjectorSafety are set depending on the switch, userlevel and operationmode.
@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
1 
@Var @RT(9)SET_ALARM @RT(0) @T @T @DERIVED 0 @F @RT(23)KEBA_STANDARD_PROCEDURE @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
1 
@Var @RT(21)cLevelProcessOperator @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
0 @RT(1)6 @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(22)ABOverrideSafetySwitch @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
11 
@Var @RT(12)sv_bInitDone @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(26)di_CoreEjectorSafetySwitch @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(12)sv_UserLevel @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(16)actual userlevel @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(16)sv_OperationMode @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(15)tnOperationMode @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(22)sv_bOverrideCoreSafety @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(58)overrides safety settings for core movements in setup mode @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(25)sv_bOverrideEjectorSafety @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(61)overrides safety settings for ejector movements in setup mode @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(14)erUserLevelLow @RT(0) @T @F @DT @RT(5)ALARM @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(19)erSetupModeRequired @RT(0) @T @F @DT @RT(5)ALARM @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(22)erOverrideSafetyModeOn @RT(0) @T @F @DT @RT(5)ALARM @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(23)erOverrideSafetyModeOff @RT(0) @T @F @DT @RT(5)ALARM @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(10)PU_Task_13 @RT(0) @T @F @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

1 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(22)pOverrideSafettySwitch @STRUCTURED_TEXT 
@RT(0) @RT(56)di_CoreEjectorSafetySwitch,sv_OperationMode,sv_UserLevel @RT(10)PU_Task_13 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
5 
@Var @RT(12)bOverrideNew @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 4 @F @F @F @F 

@Var @RT(13)fbRTrigSwitch @RT(0) @T @T @DERIVED 0 @F @RT(6)R_TRIG @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(13)bOverrideLast @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(11)bIsDILinked @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(9)bInitDone @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(42)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
IF (NOT bInitDone) THEN
    bIsDILinked := IS_LINKED(di_CoreEjectorSafetySwitch); 
    bInitDone := TRUE; 
END_IF;

IF (NOT bIsDILinked) THEN
    RETURN; 
END_IF;

bOverrideNew := FALSE; 

fbRTrigSwitch(CLK := di_CoreEjectorSafetySwitch); 
              
IF (fbRTrigSwitch.Q AND sv_bInitDone) THEN
    IF (sv_UserLevel < cLevelProcessOperator) THEN
        SET_ALARM(Name := erUserLevelLow, Param1 := DINT_TO_INT(cLevelProcessOperator)); 
    ELSIF (sv_OperationMode <> nSetup)THEN
        SET_ALARM(erSetupModeRequired);
    ELSE 
        bOverrideNew := TRUE; 
    END_IF;
END_IF;              
 
IF (bOverrideNew AND (NOT bOverrideLast)) THEN
    QUIT_ALARM(erOverrideSafetyModeOff);
    SET_ALARM(erOverrideSafetyModeOn);
END_IF;

IF ((NOT bOverrideNew) AND (bOverrideLast)) THEN
    QUIT_ALARM(erOverrideSafetyModeOn);
    SET_ALARM(erOverrideSafetyModeOff);
END_IF;
       
sv_bOverrideCoreSafety := bOverrideNew;
sv_bOverrideEjectorSafety := bOverrideNew;
bOverrideLast := bOverrideNew;


@END_Body 

@@@BEG_Comment@@@ 
@TL(10)
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

@@@END_Comment@@@ 
@END_Body 

@END_Contents 
