IMPORT_OVER_LISTFILE
 GET_TASK_INTERVAL
, GET_SYNC_REFTO
, tsCavityParam
, FBRandom
, KCTRL_PTN
, KCTRL_PTN_Param

END_IMPORT

ALGORITHM_BLOCK ABMoldFillingSimu #DUMMY_EDIT_BLOCK

ALGORITHM aFilling


VAR_INPUT
 bStart : BOOL R_EDGE;
 bReParam : BOOL;
 CavityParam : tsCavityParam;
 rActPosition : REAL;
 rActSpeed : REAL;
END_VAR

VAR_OUTPUT
 rActPressure : REAL;
END_VAR

VAR
 Param : tsCavityParam := (rViscosity:=40.0,rFriction:=0.05,rShrinking:=10.0,uBendPoints:=3,rBend1:=1.0,rBend1RelViscosity:=1.25,rBend2:=2.0,rBend2RelViscosity:=1.5,rBend3:=5.0,rBend3RelViscosity:=2.0);
 rStartPosition : REAL;
 rPrevPosition : REAL;
 rPressureMaterialSlide : REAL;
 rMaterialShrinking : REAL;
 rPressureFilling : REAL;
 rInjectVolue : REAL;
 rDeltaPressPos : REAL;
 fbNoise : FBRandom;
 rNoise : REAL;
 rNoiseAmp : REAL := 1.0;
 abShrinking : KCTRL_PTN;
 ShrinkingTime : KCTRL_PTN_Param := (uN:=1,rK:=1.0,dT1:=T#1s);
 rDecompFactor : REAL := 5.0;
END_VAR
#BEGIN_EDIT_BLOCK
IF bReParam THEN
   Param := CavityParam;
   // noise
   fbNoise(bReParam := TRUE,
           rX0 := 0.0,
           iX0 := 0,
           iA := 1103515245,
           iC := 12345,
           iM := 2147483648);
   abShrinking.Par(dCycleTime := GET_TASK_INTERVAL(),
                   Param := ShrinkingTime);
END_IF;
IF bStart THEN
   rPrevPosition := rActPosition;
   rStartPosition := rActPosition;
   rPressureFilling := 0.0;
   rPressureMaterialSlide := 0.0;
   abShrinking.Init(rOutVal := 0.0);
   rActPressure := 0.0;
END_IF;

// filling of mold
rDeltaPressPos := Param.rViscosity * (rPrevPosition - rActPosition);
rInjectVolue := rStartPosition - rActPosition;
IF (Param.uBendPoints > 2) AND (rInjectVolue > Param.rBend3)  THEN
   rDeltaPressPos := rDeltaPressPos * Param.rBend3RelViscosity;
ELSIF (Param.uBendPoints > 1) AND (rInjectVolue > Param.rBend2)  THEN
   rDeltaPressPos := rDeltaPressPos * Param.rBend2RelViscosity;
ELSIF (rInjectVolue > Param.rBend1)  THEN
   rDeltaPressPos := rDeltaPressPos * Param.rBend1RelViscosity;
END_IF;
IF (rPrevPosition < rActPosition) THEN
   rDeltaPressPos := rDeltaPressPos * rDecompFactor;
END_IF;
rPressureFilling := MAX(rPressureFilling + rDeltaPressPos, 0.0);
rPrevPosition := rActPosition;

// pressure as result of material frinction
rPressureMaterialSlide := MAX(rActSpeed * Param.rFriction, 0.0);

// shrinking of material
abShrinking.Calculate(rInVal := 1.0);
rMaterialShrinking := (1.0 - abShrinking.Calculate.rOutVal) * Param.rShrinking;

// measurement noise
fbNoise(bReParam := FALSE);
rNoise := rNoiseAmp * (2.0 * fbNoise.rX - 1.0);

// actual pressure = filling pressure + pressure material sliding - shrinking + noise of sensor
rActPressure := MAX(rPressureFilling + rPressureMaterialSlide - rMaterialShrinking + rNoise, 0.0);



;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 113 @Pou 25 
@@@BEG_Comment@@@

@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
2 
@Var @RT(17)GET_TASK_INTERVAL @RT(0) @T @T @DERIVED 0 @F @RT(22)KEBA_STANDARD_FUNCTION @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(14)GET_SYNC_REFTO @RT(0) @T @T @DERIVED 0 @F @RT(22)KEBA_STANDARD_FUNCTION @F 
@T 
@BEG_Attrib 
0 @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(17)ABMoldFillingSimu @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
0 
@END_Dcl 

@END_Export 

@BEG_Body 

1 

@BEG_Export 

@BEG_Algo 
@ALGORITHM @RT(8)aFilling @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
20 
@Var @RT(6)bStart @RT(0) @T @F @DT @RT(11)BOOL R_EDGE @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(8)bReParam @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(11)CavityParam @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(13)tsCavityParam @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(12)rActPosition @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(9)rActSpeed @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(12)rActPressure @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 3 @F @F @F @F 

@Var @RT(5)Param @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(13)tsCavityParam @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(175)(rViscosity:=40.0,rFriction:=0.05,rShrinking:=10.0,uBendPoints:=3,rBend1:=1.0,rBend1RelViscosity:=1.25,rBend2:=2.0,rBend2RelViscosity:=1.5,rBend3:=5.0,rBend3RelViscosity:=2.0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(14)rStartPosition @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(13)rPrevPosition @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(22)rPressureMaterialSlide @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(18)rMaterialShrinking @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(16)rPressureFilling @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(12)rInjectVolue @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(14)rDeltaPressPos @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(7)fbNoise @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(8)FBRandom @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(6)rNoise @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(9)rNoiseAmp @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(3)1.0 @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(11)abShrinking @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(9)KCTRL_PTN @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(13)ShrinkingTime @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(15)KCTRL_PTN_Param @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(25)(uN:=1,rK:=1.0,dT1:=T#1s) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(13)rDecompFactor @RT(0) @T @F @DT @RT(4)REAL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(3)5.0 @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(52)
IF bReParam THEN
   Param := CavityParam;
   // noise
   fbNoise(bReParam := TRUE,
           rX0 := 0.0,
           iX0 := 0,
           iA := 1103515245,
           iC := 12345,
           iM := 2147483648);
   abShrinking.Par(dCycleTime := GET_TASK_INTERVAL(),
                   Param := ShrinkingTime);
END_IF;
IF bStart THEN
   rPrevPosition := rActPosition;
   rStartPosition := rActPosition;
   rPressureFilling := 0.0;
   rPressureMaterialSlide := 0.0;
   abShrinking.Init(rOutVal := 0.0);
   rActPressure := 0.0;
END_IF;

// filling of mold
rDeltaPressPos := Param.rViscosity * (rPrevPosition - rActPosition);
rInjectVolue := rStartPosition - rActPosition;
IF (Param.uBendPoints > 2) AND (rInjectVolue > Param.rBend3)  THEN
   rDeltaPressPos := rDeltaPressPos * Param.rBend3RelViscosity;
ELSIF (Param.uBendPoints > 1) AND (rInjectVolue > Param.rBend2)  THEN
   rDeltaPressPos := rDeltaPressPos * Param.rBend2RelViscosity;
ELSIF (rInjectVolue > Param.rBend1)  THEN
   rDeltaPressPos := rDeltaPressPos * Param.rBend1RelViscosity;
END_IF;
IF (rPrevPosition < rActPosition) THEN
   rDeltaPressPos := rDeltaPressPos * rDecompFactor;
END_IF;
rPressureFilling := MAX(rPressureFilling + rDeltaPressPos, 0.0);
rPrevPosition := rActPosition;

// pressure as result of material frinction
rPressureMaterialSlide := MAX(rActSpeed * Param.rFriction, 0.0);

// shrinking of material
abShrinking.Calculate(rInVal := 1.0);
rMaterialShrinking := (1.0 - abShrinking.Calculate.rOutVal) * Param.rShrinking;

// measurement noise
fbNoise(bReParam := FALSE);
rNoise := rNoiseAmp * (2.0 * fbNoise.rX - 1.0);

// actual pressure = filling pressure + pressure material sliding - shrinking + noise of sensor
rActPressure := MAX(rPressureFilling + rPressureMaterialSlide - rMaterialShrinking + rNoise, 0.0);


@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 
@END_Body 

@END_Contents 
