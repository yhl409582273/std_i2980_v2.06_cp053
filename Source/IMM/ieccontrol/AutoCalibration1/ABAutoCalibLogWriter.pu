(*
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

Wait for evAutoCalibLog events which contain a log string
write log string and curent time to log file.

evAutoCalibLog events are sent by FBAutoCalibLog.

*)

IMPORT_OVER_LISTFILE
 tevAutoCalibLog
, tevAutoCalibLogData
, RTC
, KFILE_Open_Data

END_IMPORT

ALGORITHM_BLOCK ABAutoCalibLogWriter #DUMMY_EDIT_BLOCK

SYSTEM_VAR
 sv_iLogFileChanged : DINT;
END_VAR

SYSTEM_OBJECT
 evAutoCalibLog : tevAutoCalibLog;
 PU_Task_13 : TASK;
END_OBJECT

EVENT_ALGORITHM evWaitWriteLog ON PU_Task_13 WITH evAutoCalibLog


VAR_INPUT
 data : tevAutoCalibLogData;
END_VAR

VAR
 rtc : RTC;
 opendata : KFILE_Open_Data;
 written : DINT;
 tmpstr : STRING(255);
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

opendata := KFILE_Open(data.name, KFILE_Mode_AppendCreate);
IF opendata.Status = KFILE_Status_OK THEN

    rtc(EN := FALSE);
    tmpstr := CONCAT(DATE_AND_TIME_TO_STRING(rtc.CDT), ': ', data.string,'$N');
    //not using KFILE_WriteString, because it appends a \0 to the text
    written := KFILE_Write(Token := opendata.Token, Buffer := tmpstr, Length := LEN(tmpstr));
    opendata.Status := KFILE_Close(opendata.Token);
    
    //increase log file counter so HMI can update display of logfile
    sv_iLogFileChanged := sv_iLogFileChanged + 1;
END_IF;


;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 68 @Pou 25 
@@@BEG_Comment@@@
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

Wait for evAutoCalibLog events which contain a log string
write log string and curent time to log file.

evAutoCalibLog events are sent by FBAutoCalibLog.

@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
0 
@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
0 
@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(20)ABAutoCalibLogWriter @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
3 
@Var @RT(14)evAutoCalibLog @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(15)tevAutoCalibLog @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(18)sv_iLogFileChanged @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(10)PU_Task_13 @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

1 

@BEG_Export 

@BEG_Algo 
@EVENT_ALGORITHM @RT(14)evWaitWriteLog @STRUCTURED_TEXT 
@RT(0) @RT(14)evAutoCalibLog @RT(10)PU_Task_13 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
5 
@Var @RT(4)data @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(19)tevAutoCalibLogData @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 1 @F @F @F @F 

@Var @RT(3)rtc @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(3)RTC @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(8)opendata @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(15)KFILE_Open_Data @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(7)written @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(6)tmpstr @RT(0) @T @F @DT @RT(11)STRING(255) @RT(0) @T @T @STRING 0 @F @RT(3)255 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(18)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)

opendata := KFILE_Open(data.name, KFILE_Mode_AppendCreate);
IF opendata.Status = KFILE_Status_OK THEN

    rtc(EN := FALSE);
    tmpstr := CONCAT(DATE_AND_TIME_TO_STRING(rtc.CDT), ': ', data.string,'$N');
    //not using KFILE_WriteString, because it appends a \0 to the text
    written := KFILE_Write(Token := opendata.Token, Buffer := tmpstr, Length := LEN(tmpstr));
    opendata.Status := KFILE_Close(opendata.Token);
    
    //increase log file counter so HMI can update display of logfile
    sv_iLogFileChanged := sv_iLogFileChanged + 1;
END_IF;

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 
@END_Body 

@END_Contents 
