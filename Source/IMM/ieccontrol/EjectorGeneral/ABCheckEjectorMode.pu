(*
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

lock full automatic mode when "ejector hold" mode is selected
*)

IMPORT_OVER_LISTFILE
 cCompOperationMode
, tnEjectorMode
, tnOperationMode
, ALARM_EVENT
, FBLockUnlock
, tsAlarm
, ALARM_EVENT_DATA

END_IMPORT

ALGORITHM_BLOCK ABCheckEjectorMode #DUMMY_EDIT_BLOCK

SYSTEM_VAR
 sv_EjectorMode : tnEjectorMode;
 sv_bInitDone : BOOL;
 sv_OperationMode : tnOperationMode;
 sv_bUseProgramSwitches : BOOL;
END_VAR

SYSTEM_OBJECT
 erEjectorHoldInFA : ALARM;
 PU_Task_7 : TASK;
 evAlarmAutoHalf : ALARM_EVENT;
END_OBJECT

POSTUPDATE_ALGORITHM pEjeModeChanged ON PU_Task_7 WITH sv_EjectorMode,sv_bInitDone,sv_bUseProgramSwitches


VAR
 fbLockUnlockOpMode : FBLockUnlock;
 Alarm : tsAlarm;
 bInitDone : BOOL;
 null : ALARM_EVENT_DATA;
END_VAR
#BEGIN_EDIT_BLOCK
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
 
IF NOT bInitDone THEN
    fbLockUnlockOpMode.DeviceId.CompId := cCompOperationMode;
    fbLockUnlockOpMode.DeviceId.IndexId := 1;
    Alarm.AlarmId := erEjectorHoldInFA;
    bInitDone := TRUE;
END_IF;


IF (sv_EjectorMode = nHold) AND sv_bUseProgramSwitches THEN
    //full automatic not allowed if hold mode is selected
    fbLockUnlockOpMode.Mode := nLockAbort;
    IF sv_OperationMode = nFullAutomatic THEN
        SET_ALARM(erEjectorHoldInFA);
        SET_EVENT(evAlarmAutoHalf, null); 
    END_IF;
ELSE
    //allow change to full automatic
    fbLockUnlockOpMode.Mode := nUnlock;
END_IF;
 
fbLockUnlockOpMode(MoveDir := cModeFullAutomatic,
                   MoveId := cModeFullAutomatic,
                   Alarm := Alarm);


;#END_EDIT_BLOCK END_ALGORITHM



END_ALGORITHM_BLOCK



#END_OF_IEC_PART

@Puma @IecEditor 6 80 @Pou 25 
@@@BEG_Comment@@@
@h    ! WARNING !
@h    The Kemro K2 system (including software) only meets category B according to EN 954-1,
@h    thus it is not intended for usage in safety-relevant control applications in the field 
@h    of personal safety (e.g. emergency stop).
@h    To implement potentially necessary safety-relevant control tasks, always use additional 
@h    external safety devices that are intended for the particular purpose, and meet the necessary 
@h    functional safety.
@h    For further information see EN 954-1 (EN ISO 13849-1) and/or the K2-x00 user manual, chapter 
@h    "CE conformity, directives and standards".

lock full automatic mode when "ejector hold" mode is selected
@@@END_Comment@@@

@BEG_Contents 

@BEG_Func 
@RT(17)FuncTreeContainer 
0 
@END_Func 

@BEG_Const 
@RT(18)ConstTreeContainer 
1 
@Var @RT(18)cCompOperationMode @RT(0) @T @F @DT @RT(4)DINT @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
0 @RT(3)111 @RT(24)Component Operation Mode 
@END_Attrib 
1 1 @F @F @F @F 

@END_Const 

@BEG_Export 

@BEG_Kind 
@ALGORITHM_BLOCK @RT(18)ABCheckEjectorMode @STRUCTURED_TEXT 
@RT(0) @RT(0) @RT(0) 
@END_Kind 

@BEG_Dcl 
@RT(16)DclTreeContainer 
7 
@Var @RT(14)sv_EjectorMode @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(13)tnEjectorMode @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(17)erEjectorHoldInFA @RT(0) @T @F @DT @RT(5)ALARM @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(9)PU_Task_7 @RT(0) @T @F @DT @RT(4)TASK @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(12)sv_bInitDone @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(16)sv_OperationMode @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(15)tnOperationMode @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@Var @RT(15)evAlarmAutoHalf @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(11)ALARM_EVENT @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 7 @F @F @F @F 

@Var @RT(22)sv_bUseProgramSwitches @RT(0) @T @T @RENAMED 0 @T @T @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 8 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 

1 

@BEG_Export 

@BEG_Algo 
@POSTUPDATE_ALGORITHM @RT(15)pEjeModeChanged @STRUCTURED_TEXT 
@RT(0) @RT(50)sv_EjectorMode,sv_bInitDone,sv_bUseProgramSwitches @RT(9)PU_Task_7 @F @F 
@END_Algo 

@BEG_Dcl 
@RT(16)DclTreeContainer 
4 
@Var @RT(18)fbLockUnlockOpMode @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(12)FBLockUnlock @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(5)Alarm @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(7)tsAlarm @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(9)bInitDone @RT(0) @T @F @DT @RT(4)BOOL @RT(0) @T @T @BASIC 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@Var @RT(4)null @RT(0) @T @T @DERIVED 0 @T @T @DT @RT(16)ALARM_EVENT_DATA @RT(0) @T @T @UNKNOWN 0 @F 
@F @F 
@T 
@BEG_Attrib 
3 @RT(0) @RT(0) @RT(0) 
@END_Attrib 
1 0 @F @F @F @F 

@END_Dcl 

@END_Export 

@BEG_Body 
@TL(29)
(**************************************** WARNING ********************************************
 *** The KEBA Kemro K2 System including software is not intended for safety control tasks! ***
 ***                       For further information see Comment tab!                        ***
 *********************************************************************************************)
 
IF NOT bInitDone THEN
    fbLockUnlockOpMode.DeviceId.CompId := cCompOperationMode;
    fbLockUnlockOpMode.DeviceId.IndexId := 1;
    Alarm.AlarmId := erEjectorHoldInFA;
    bInitDone := TRUE;
END_IF;


IF (sv_EjectorMode = nHold) AND sv_bUseProgramSwitches THEN
    //full automatic not allowed if hold mode is selected
    fbLockUnlockOpMode.Mode := nLockAbort;
    IF sv_OperationMode = nFullAutomatic THEN
        SET_ALARM(erEjectorHoldInFA);
        SET_EVENT(evAlarmAutoHalf, null); 
    END_IF;
ELSE
    //allow change to full automatic
    fbLockUnlockOpMode.Mode := nUnlock;
END_IF;
 
fbLockUnlockOpMode(MoveDir := cModeFullAutomatic,
                   MoveId := cModeFullAutomatic,
                   Alarm := Alarm);

@END_Body 

@@@BEG_Comment@@@ 
@TL(0)

@@@END_Comment@@@ 
@END_Body 

@END_Contents 
